!(function(t, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? n(exports)
    : 'function' == typeof define && define.amd
      ? define(['exports'], n)
      : n((t.saladbarFuture = {}));
})(this, (t) => {
  'use strict';
  var n = function(t) {
    return (
      null != t && 'object' == typeof t && !0 === t['@@functional/placeholder']
    );
  };
  var e = function(t) {
    return function e(r) {
      return 0 === arguments.length || n(r) ? e : t.apply(this, arguments);
    };
  };
  var r = function(t, n) {
    switch (t) {
      case 0:
        return function() {
          return n.apply(this, arguments);
        };
      case 1:
        return function(t) {
          return n.apply(this, arguments);
        };
      case 2:
        return function(t, e) {
          return n.apply(this, arguments);
        };
      case 3:
        return function(t, e, r) {
          return n.apply(this, arguments);
        };
      case 4:
        return function(t, e, r, u) {
          return n.apply(this, arguments);
        };
      case 5:
        return function(t, e, r, u, i) {
          return n.apply(this, arguments);
        };
      case 6:
        return function(t, e, r, u, i, o) {
          return n.apply(this, arguments);
        };
      case 7:
        return function(t, e, r, u, i, o, a) {
          return n.apply(this, arguments);
        };
      case 8:
        return function(t, e, r, u, i, o, a, c) {
          return n.apply(this, arguments);
        };
      case 9:
        return function(t, e, r, u, i, o, a, c, s) {
          return n.apply(this, arguments);
        };
      case 10:
        return function(t, e, r, u, i, o, a, c, s, f) {
          return n.apply(this, arguments);
        };
      default:
        throw new Error(
          'First argument to _arity must be a non-negative integer no greater than ten'
        );
    }
  };
  var u = function(t) {
    return function r(u, i) {
      switch (arguments.length) {
        case 0:
          return r;
        case 1:
          return n(u)
            ? r
            : e((n) => {
                return t(u, n);
              });
        default:
          return n(u) && n(i)
            ? r
            : n(u)
              ? e((n) => {
                  return t(n, i);
                })
              : n(i)
                ? e((n) => {
                    return t(u, n);
                  })
                : t(u, i);
      }
    };
  };
  var i = function t(e, u, i) {
      return function() {
        for (
          var o = [], a = 0, c = e, s = 0;
          s < u.length || a < arguments.length;

        ) {
          var f;
          s < u.length && (!n(u[s]) || a >= arguments.length)
            ? (f = u[s])
            : ((f = arguments[a]), (a += 1)),
            (o[s] = f),
            n(f) || (c -= 1),
            (s += 1);
        }
        return c <= 0 ? i.apply(this, o) : r(c, t(e, o, i));
      };
    },
    o = u((t, n) => {
      return 1 === t ? e(n) : r(t, i(t, [], n));
    }),
    a = e((t) => {
      return o(t.length, t);
    }),
    c =
      Array.isArray ||
      function(t) {
        return (
          null != t &&
          t.length >= 0 &&
          '[object Array]' === Object.prototype.toString.call(t)
        );
      };
  var s = function(t) {
    return 'function' == typeof t['@@transducer/step'];
  };
  var f = function(t, n, e) {
    return function() {
      if (0 === arguments.length) return e();
      var r = Array.prototype.slice.call(arguments, 0),
        u = r.pop();
      if (!c(u)) {
        for (var i = 0; i < t.length; ) {
          if ('function' == typeof u[t[i]]) return u[t[i]].apply(u, r);
          i += 1;
        }
        if (s(u)) return n.apply(null, r)(u);
      }
      return e.apply(this, arguments);
    };
  };
  var h = function(t) {
      return '[object String]' === Object.prototype.toString.call(t);
    },
    p = e((t) => {
      return (
        !!c(t) ||
        (!!t &&
          ('object' == typeof t &&
            (!h(t) &&
              (1 === t.nodeType
                ? !!t.length
                : 0 === t.length ||
                  (t.length > 0 &&
                    (t.hasOwnProperty(0) && t.hasOwnProperty(t.length - 1)))))))
      );
    });
  var l = function(t) {
    return function n(e) {
      for (var r, u, i, o = [], a = 0, c = e.length; a < c; ) {
        if (p(e[a]))
          for (i = 0, u = (r = t ? n(e[a]) : e[a]).length; i < u; )
            (o[o.length] = r[i]), (i += 1);
        else o[o.length] = e[a];
        a += 1;
      }
      return o;
    };
  };
  var y = function(t) {
      return { '@@transducer/value': t, '@@transducer/reduced': !0 };
    },
    _ = (function() {
      function t(t) {
        this.f = t;
      }
      return (
        (t.prototype['@@transducer/init'] = function() {
          throw new Error('init not implemented on XWrap');
        }),
        (t.prototype['@@transducer/result'] = function(t) {
          return t;
        }),
        (t.prototype['@@transducer/step'] = function(t, n) {
          return this.f(t, n);
        }),
        t
      );
    })();
  var d = function(t) {
      return new _(t);
    },
    v = u((t, n) => {
      return r(t.length, function() {
        return t.apply(n, arguments);
      });
    });
  function m(t, n, e) {
    for (var r = e.next(); !r.done; ) {
      if (
        (n = t['@@transducer/step'](n, r.value)) &&
        n['@@transducer/reduced']
      ) {
        n = n['@@transducer/value'];
        break;
      }
      r = e.next();
    }
    return t['@@transducer/result'](n);
  }
  function g(t, n, e, r) {
    return t['@@transducer/result'](e[r](v(t['@@transducer/step'], t), n));
  }
  var b = 'undefined' != typeof Symbol ? Symbol.iterator : '@@iterator';
  var w = function(t, n, e) {
      if (('function' == typeof t && (t = d(t)), p(e)))
        return (function(t, n, e) {
          for (var r = 0, u = e.length; r < u; ) {
            if (
              (n = t['@@transducer/step'](n, e[r])) &&
              n['@@transducer/reduced']
            ) {
              n = n['@@transducer/value'];
              break;
            }
            r += 1;
          }
          return t['@@transducer/result'](n);
        })(t, n, e);
      if ('function' == typeof e['fantasy-land/reduce'])
        return g(t, n, e, 'fantasy-land/reduce');
      if (null != e[b]) return m(t, n, e[b]());
      if ('function' == typeof e.next) return m(t, n, e);
      if ('function' == typeof e.reduce) return g(t, n, e, 'reduce');
      throw new TypeError('reduce: list must be array or iterable');
    },
    F = {
      init: function() {
        return this.xf['@@transducer/init']();
      },
      result: function(t) {
        return this.xf['@@transducer/result'](t);
      },
    },
    j = function(t) {
      var n = (function(t) {
        return {
          '@@transducer/init': F.init,
          '@@transducer/result': function(n) {
            return t['@@transducer/result'](n);
          },
          '@@transducer/step': function(n, e) {
            var r = t['@@transducer/step'](n, e);
            return r['@@transducer/reduced'] ? y(r) : r;
          },
        };
      })(t);
      return {
        '@@transducer/init': F.init,
        '@@transducer/result': function(t) {
          return n['@@transducer/result'](t);
        },
        '@@transducer/step': function(t, e) {
          return p(e) ? w(n, t, e) : w(n, t, [e]);
        },
      };
    };
  var k = function(t, n) {
      for (var e = 0, r = n.length, u = Array(r); e < r; )
        (u[e] = t(n[e])), (e += 1);
      return u;
    },
    O = (function() {
      function t(t, n) {
        (this.xf = n), (this.f = t);
      }
      return (
        (t.prototype['@@transducer/init'] = F.init),
        (t.prototype['@@transducer/result'] = F.result),
        (t.prototype['@@transducer/step'] = function(t, n) {
          return this.xf['@@transducer/step'](t, this.f(n));
        }),
        t
      );
    })(),
    A = u((t, n) => {
      return new O(t, n);
    });
  var S = function(t, n) {
      return Object.prototype.hasOwnProperty.call(n, t);
    },
    x = Object.prototype.toString,
    R = function() {
      return '[object Arguments]' === x.call(arguments)
        ? function(t) {
            return '[object Arguments]' === x.call(t);
          }
        : function(t) {
            return S('callee', t);
          };
    },
    P = !{ toString: null }.propertyIsEnumerable('toString'),
    q = [
      'constructor',
      'valueOf',
      'isPrototypeOf',
      'toString',
      'propertyIsEnumerable',
      'hasOwnProperty',
      'toLocaleString',
    ],
    M = (function() {
      return arguments.propertyIsEnumerable('length');
    })(),
    E = function(t, n) {
      for (var e = 0; e < t.length; ) {
        if (t[e] === n) return !0;
        e += 1;
      }
      return !1;
    },
    N =
      'function' != typeof Object.keys || M
        ? function(t) {
            if (Object(t) !== t) return [];
            var n,
              e,
              r = [],
              u = M && R(t);
            for (n in t) !S(n, t) || (u && 'length' === n) || (r[r.length] = n);
            if (P)
              for (e = q.length - 1; e >= 0; )
                S((n = q[e]), t) && !E(r, n) && (r[r.length] = n), (e -= 1);
            return r;
          }
        : function(t) {
            return Object(t) !== t ? [] : Object.keys(t);
          },
    T = e(N),
    C = u(
      f(['fantasy-land/map', 'map'], A, (t, n) => {
        switch (Object.prototype.toString.call(n)) {
          case '[object Function]':
            return o(n.length, function() {
              return t.call(this, n.apply(this, arguments));
            });
          case '[object Object]':
            return w(
              (e, r) => {
                return (e[r] = t(n[r])), e;
              },
              {},
              T(n)
            );
          default:
            return k(t, n);
        }
      })
    ),
    z = u(
      f(
        ['fantasy-land/chain', 'chain'],
        u((t, n) => {
          return C(t, j(n));
        }),
        (t, n) => {
          return 'function' == typeof n
            ? function(e) {
                return t(n(e))(e);
              }
            : l(!1)(C(t, n));
        }
      )
    );
  var L = function(t, n) {
    return function() {
      return n.call(this, t.apply(this, arguments));
    };
  };
  var W = function(t) {
      return function r(i, o, a) {
        switch (arguments.length) {
          case 0:
            return r;
          case 1:
            return n(i)
              ? r
              : u((n, e) => {
                  return t(i, n, e);
                });
          case 2:
            return n(i) && n(o)
              ? r
              : n(i)
                ? u((n, e) => {
                    return t(n, o, e);
                  })
                : n(o)
                  ? u((n, e) => {
                      return t(i, n, e);
                    })
                  : e((n) => {
                      return t(i, o, n);
                    });
          default:
            return n(i) && n(o) && n(a)
              ? r
              : n(i) && n(o)
                ? u((n, e) => {
                    return t(n, e, a);
                  })
                : n(i) && n(a)
                  ? u((n, e) => {
                      return t(n, o, e);
                    })
                  : n(o) && n(a)
                    ? u((n, e) => {
                        return t(i, n, e);
                      })
                    : n(i)
                      ? e((n) => {
                          return t(n, o, a);
                        })
                      : n(o)
                        ? e((n) => {
                            return t(i, n, a);
                          })
                        : n(a)
                          ? e((n) => {
                              return t(i, o, n);
                            })
                          : t(i, o, a);
        }
      };
    },
    B = W(w);
  var I = function(t, n) {
      return function() {
        var e = arguments.length;
        if (0 === e) return n();
        var r = arguments[e - 1];
        return c(r) || 'function' != typeof r[t]
          ? n.apply(this, arguments)
          : r[t].apply(r, Array.prototype.slice.call(arguments, 0, e - 1));
      };
    },
    D = e(
      I(
        'tail',
        W(
          I('slice', (t, n, e) => {
            return Array.prototype.slice.call(e, t, n);
          })
        )(1, 1 / 0)
      )
    );
  var Q = function() {
      if (0 === arguments.length)
        throw new Error('pipe requires at least one argument');
      return r(arguments[0].length, B(L, arguments[0], D(arguments)));
    },
    G = e((t) => {
      return h(t)
        ? t
            .split('')
            .reverse()
            .join('')
        : Array.prototype.slice.call(t, 0).reverse();
    });
  var Z = function() {
    if (0 === arguments.length)
      throw new Error('compose requires at least one argument');
    return Q.apply(this, G(arguments));
  };
  var $ = function(t) {
      return t && t['@@transducer/reduced']
        ? t
        : { '@@transducer/value': t, '@@transducer/reduced': !0 };
    },
    J = (function() {
      function t(t, n) {
        (this.xf = n), (this.f = t), (this.all = !0);
      }
      return (
        (t.prototype['@@transducer/init'] = F.init),
        (t.prototype['@@transducer/result'] = function(t) {
          return (
            this.all && (t = this.xf['@@transducer/step'](t, !0)),
            this.xf['@@transducer/result'](t)
          );
        }),
        (t.prototype['@@transducer/step'] = function(t, n) {
          return (
            this.f(n) ||
              ((this.all = !1), (t = $(this.xf['@@transducer/step'](t, !1)))),
            t
          );
        }),
        t
      );
    })(),
    U = u(
      f(
        ['all'],
        u((t, n) => {
          return new J(t, n);
        }),
        (t, n) => {
          for (var e = 0; e < n.length; ) {
            if (!t(n[e])) return !1;
            e += 1;
          }
          return !0;
        }
      )
    ),
    V = W((t, n, e) => {
      return o(Math.max(t.length, n.length, e.length), function() {
        return t.apply(this, arguments)
          ? n.apply(this, arguments)
          : e.apply(this, arguments);
      });
    }),
    X =
      'undefined' != typeof window
        ? window
        : 'undefined' != typeof global
          ? global
          : 'undefined' != typeof self ? self : {};
  function Y(t, n) {
    return t((n = { exports: {} }), n.exports), n.exports;
  }
  var H = Y((t) => {
      t.exports = (function() {
        var t = '@@type',
          n = new RegExp('^([\\s\\S]+)/([\\s\\S]+?)(?:@([0-9]+))?$');
        function e(n) {
          return null != n &&
            null != n.constructor &&
            n.constructor.prototype !== n &&
            'string' == typeof n.constructor[t]
            ? n.constructor[t]
            : Object.prototype.toString
                .call(n)
                .slice('[object '.length, -']'.length);
        }
        return (
          (e.parse = function(t) {
            var e = n.exec(t);
            return {
              namespace: null == e || null == e[1] ? null : e[1],
              name: null == e ? t : e[2],
              version: null == e || null == e[3] ? 0 : Number(e[3]),
            };
          }),
          e
        );
      })();
    }),
    K = Y((t) => {
      t.exports = (function(t) {
        if ('undefined' != typeof __doctest) {
          __doctest.require('./test/Identity');
          var n = __doctest.require('./test/List'),
            e = __doctest.require('./test/Maybe');
          __doctest.require('./test/Sum'),
            __doctest.require('./test/Tuple'),
            n.Nil,
            n.Cons,
            e.Nothing,
            e.Just;
        }
        function r(t) {
          return function(n) {
            return t.concat(n);
          };
        }
        function u(t) {
          return function(n) {
            return t;
          };
        }
        function i(t, n) {
          Object.keys(t).forEach(n, t);
        }
        function o(t, n) {
          return Object.prototype.hasOwnProperty.call(n, t);
        }
        function a(t) {
          return t;
        }
        function c(t) {
          return function(n) {
            return [t, n];
          };
        }
        function s(n, e) {
          return typeof n == typeof e && t(n) === t(e);
        }
        function f(t) {
          return { value: t, done: !1 };
        }
        function h(t) {
          return { value: t, done: !0 };
        }
        function p(t, n, e, r) {
          if (!(this instanceof p)) return new p(t, n, e, r);
          (this.name = t),
            (this.url = n),
            (this.test = function(t) {
              return (
                e.every((n) => {
                  return n.test(t);
                }) && r(t)
              );
            });
        }
        p['@@type'] = 'sanctuary-type-classes/TypeClass';
        var l = 'Constructor',
          y = 'Value';
        function _(t, n, e) {
          for (var r = e, u = 0; u < n.length; u += 1) {
            var i = n[u];
            if (null == r || (!t && !o(i, r))) return null;
            r = r[i];
          }
          return 'function' == typeof r ? r : null;
        }
        function d(t, n) {
          return _(!0, t, n);
        }
        function v(t) {
          return _(!1, t, X);
        }
        var m = o('name', () => {})
          ? function(t) {
              return t.name;
            }
          : function(t) {
              var n = /function (\w*)/.exec(t);
              return null == n ? '' : n[1];
            };
        function g(n, e, r) {
          function u(n) {
            var e = 'fantasy-land/' + n;
            return r[n] === l
              ? function(t) {
                  var n = d([e], t);
                  return null == n && 'function' == typeof t ? v([m(t), e]) : n;
                }
              : function(n) {
                  var r =
                      null != n &&
                      null != n.constructor &&
                      n.constructor.prototype === n,
                    u = null;
                  return (
                    r || (u = d([e], n)),
                    null == u && (u = v([t(n), 'prototype', e])),
                    u && u.bind(n)
                  );
                };
          }
          var i = Object.keys(r),
            o = p(
              'sanctuary-type-classes/' + n,
              'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v8.1.0#' +
                n,
              e,
              (t) => {
                return i.every((n) => {
                  var e = r[n] === l ? t.constructor : t;
                  return null != u(n)(e);
                });
              }
            );
          return (
            (o.methods = i.reduce((t, n) => {
              return (t[n] = u(n)), t;
            }, {})),
            o
          );
        }
        var b = g('Setoid', [], { equals: y }),
          w = g('Ord', [b], { lte: y }),
          F = g('Semigroupoid', [], { compose: y }),
          j = g('Category', [F], { id: l }),
          k = g('Semigroup', [], { concat: y }),
          O = g('Monoid', [k], { empty: l }),
          A = g('Group', [O], { invert: y }),
          S = g('Filterable', [], { filter: y }),
          x = g('Functor', [], { map: y }),
          R = g('Bifunctor', [x], { bimap: y }),
          P = g('Profunctor', [x], { promap: y }),
          q = g('Apply', [x], { ap: y }),
          M = g('Applicative', [q], { of: l }),
          E = g('Chain', [q], { chain: y }),
          N = g('ChainRec', [E], { chainRec: l }),
          T = g('Monad', [M, E], {}),
          C = g('Alt', [x], { alt: y }),
          z = g('Plus', [C], { zero: l }),
          L = g('Alternative', [M, z], {}),
          W = g('Foldable', [], { reduce: y }),
          B = g('Traversable', [x, W], { traverse: y }),
          I = g('Extend', [x], { extend: y }),
          D = g('Comonad', [I], { extract: y }),
          Q = g('Contravariant', [], { contramap: y });
        function G(t) {
          return [t];
        }
        function Z(t) {
          if (t.length !== this.length) return !1;
          for (var n = 0; n < this.length; n += 1)
            if (!H(this[n], t[n])) return !1;
          return !0;
        }
        function $(t) {
          for (var n = 0; ; n += 1) {
            if (n === this.length) return !0;
            if (n === t.length) return !1;
            if (!H(this[n], t[n])) return tt(this[n], t[n]);
          }
        }
        function J(t) {
          return this.concat(t);
        }
        function U(t) {
          var n = {};
          function e(t) {
            n[t] = this[t];
          }
          return i(this, e), i(t, e), n;
        }
        var V,
          X = {
            Null: {
              prototype: {
                toString: function() {
                  return 'null';
                },
                'fantasy-land/equals': function(t) {
                  return !0;
                },
                'fantasy-land/lte': function(t) {
                  return !0;
                },
              },
            },
            Undefined: {
              prototype: {
                toString: function() {
                  return 'undefined';
                },
                'fantasy-land/equals': function(t) {
                  return !0;
                },
                'fantasy-land/lte': function(t) {
                  return !0;
                },
              },
            },
            Boolean: {
              prototype: {
                toString: function() {
                  return 'object' == typeof this
                    ? 'new Boolean(' + Y(this.valueOf()) + ')'
                    : this.toString();
                },
                'fantasy-land/equals': function(t) {
                  return 'object' == typeof this
                    ? H(this.valueOf(), t.valueOf())
                    : this === t;
                },
                'fantasy-land/lte': function(t) {
                  return 'object' == typeof this
                    ? tt(this.valueOf(), t.valueOf())
                    : !1 === this || !0 === t;
                },
              },
            },
            Number: {
              prototype: {
                toString: function() {
                  return 'object' == typeof this
                    ? 'new Number(' + Y(this.valueOf()) + ')'
                    : 1 / this == -1 / 0 ? '-0' : this.toString(10);
                },
                'fantasy-land/equals': function(t) {
                  return 'object' == typeof this
                    ? H(this.valueOf(), t.valueOf())
                    : (isNaN(this) && isNaN(t)) || this === t;
                },
                'fantasy-land/lte': function(t) {
                  return 'object' == typeof this
                    ? tt(this.valueOf(), t.valueOf())
                    : (isNaN(this) && isNaN(t)) || this <= t;
                },
              },
            },
            Date: {
              prototype: {
                toString: function() {
                  var t = isNaN(this.valueOf()) ? NaN : this.toISOString();
                  return 'new Date(' + Y(t) + ')';
                },
                'fantasy-land/equals': function(t) {
                  return H(this.valueOf(), t.valueOf());
                },
                'fantasy-land/lte': function(t) {
                  return tt(this.valueOf(), t.valueOf());
                },
              },
            },
            RegExp: {
              prototype: {
                'fantasy-land/equals': function(t) {
                  return (
                    t.source === this.source &&
                    t.global === this.global &&
                    t.ignoreCase === this.ignoreCase &&
                    t.multiline === this.multiline &&
                    t.sticky === this.sticky &&
                    t.unicode === this.unicode
                  );
                },
              },
            },
            String: {
              'fantasy-land/empty': function() {
                return '';
              },
              prototype: {
                toString: function() {
                  return 'object' == typeof this
                    ? 'new String(' + Y(this.valueOf()) + ')'
                    : JSON.stringify(this);
                },
                'fantasy-land/equals': function(t) {
                  return 'object' == typeof this
                    ? H(this.valueOf(), t.valueOf())
                    : this === t;
                },
                'fantasy-land/lte': function(t) {
                  return 'object' == typeof this
                    ? tt(this.valueOf(), t.valueOf())
                    : this <= t;
                },
                'fantasy-land/concat': function(t) {
                  return this + t;
                },
              },
            },
            Array: {
              'fantasy-land/empty': function() {
                return [];
              },
              'fantasy-land/of': G,
              'fantasy-land/chainRec': function(t, n) {
                for (var e = [n], r = []; e.length > 0; ) {
                  for (
                    var u = t(f, h, e.shift()), i = [], o = 0;
                    o < u.length;
                    o += 1
                  )
                    (u[o].done ? r : i).push(u[o].value);
                  Array.prototype.unshift.apply(e, i);
                }
                return r;
              },
              'fantasy-land/zero': function() {
                return [];
              },
              prototype: {
                toString: function() {
                  for (
                    var t = this.map(Y), n = Object.keys(this).sort(), e = 0;
                    e < n.length;
                    e += 1
                  ) {
                    var r = n[e];
                    /^\d+$/.test(r) || t.push(Y(r) + ': ' + Y(this[r]));
                  }
                  return '[' + t.join(', ') + ']';
                },
                'fantasy-land/equals': Z,
                'fantasy-land/lte': $,
                'fantasy-land/concat': J,
                'fantasy-land/filter': function(t) {
                  return this.filter((n) => {
                    return t(n);
                  });
                },
                'fantasy-land/map': function(t) {
                  return this.map((n) => {
                    return t(n);
                  });
                },
                'fantasy-land/ap': function(t) {
                  for (var n = [], e = 0; e < t.length; e += 1)
                    for (var r = 0; r < this.length; r += 1)
                      n.push(t[e](this[r]));
                  return n;
                },
                'fantasy-land/chain': function(t) {
                  var n = [];
                  return (
                    this.forEach((e) => {
                      Array.prototype.push.apply(n, t(e));
                    }),
                    n
                  );
                },
                'fantasy-land/alt': J,
                'fantasy-land/reduce': function(t, n) {
                  return this.reduce((n, e) => {
                    return t(n, e);
                  }, n);
                },
                'fantasy-land/traverse': function(t, n) {
                  var e = this;
                  function u(i, o) {
                    switch (o) {
                      case 0:
                        return ct(t, []);
                      case 2:
                        return at(c, n(e[i]), n(e[i + 1]));
                      default:
                        var a = 2 * Math.floor(o / 4);
                        return at(r, u(i, a), u(i + a, o - a));
                    }
                  }
                  return this.length % 2 == 1
                    ? at(r, ut(G, n(this[0])), u(1, this.length - 1))
                    : u(0, this.length);
                },
                'fantasy-land/extend': function(t) {
                  return this.map((n, e, r) => {
                    return t(r.slice(e));
                  });
                },
              },
            },
            Arguments: {
              prototype: {
                toString: function() {
                  return (
                    '(function () { return arguments; }(' +
                    Array.prototype.map.call(this, Y).join(', ') +
                    '))'
                  );
                },
                'fantasy-land/equals': function(t) {
                  return Z.call(this, t);
                },
                'fantasy-land/lte': function(t) {
                  return $.call(this, t);
                },
              },
            },
            Error: {
              prototype: {
                toString: function() {
                  return 'new ' + this.name + '(' + Y(this.message) + ')';
                },
                'fantasy-land/equals': function(t) {
                  return H(this.name, t.name) && H(this.message, t.message);
                },
              },
            },
            Object: {
              'fantasy-land/empty': function() {
                return {};
              },
              'fantasy-land/zero': function() {
                return {};
              },
              prototype: {
                toString: function() {
                  for (
                    var t = [], n = Object.keys(this).sort(), e = 0;
                    e < n.length;
                    e += 1
                  ) {
                    var r = n[e];
                    t.push(Y(r) + ': ' + Y(this[r]));
                  }
                  return '{' + t.join(', ') + '}';
                },
                'fantasy-land/equals': function(t) {
                  var n = this,
                    e = Object.keys(this).sort();
                  return (
                    H(e, Object.keys(t).sort()) &&
                    e.every((e) => {
                      return H(n[e], t[e]);
                    })
                  );
                },
                'fantasy-land/lte': function(t) {
                  for (
                    var n = Object.keys(this).sort(), e = Object.keys(t).sort();
                    ;

                  ) {
                    if (0 === n.length) return !0;
                    if (0 === e.length) return !1;
                    var r = n.shift(),
                      u = e.shift();
                    if (r < u) return !0;
                    if (r > u) return !1;
                    if (!H(this[r], t[r])) return tt(this[r], t[r]);
                  }
                },
                'fantasy-land/concat': U,
                'fantasy-land/filter': function(t) {
                  var n = {};
                  return (
                    i(this, function(e) {
                      t(this[e]) && (n[e] = this[e]);
                    }),
                    n
                  );
                },
                'fantasy-land/map': function(t) {
                  var n = {};
                  return (
                    i(this, function(e) {
                      n[e] = t(this[e]);
                    }),
                    n
                  );
                },
                'fantasy-land/ap': function(t) {
                  var n = {};
                  return (
                    i(this, function(e) {
                      o(e, t) && (n[e] = t[e](this[e]));
                    }),
                    n
                  );
                },
                'fantasy-land/alt': U,
                'fantasy-land/reduce': function(t, n) {
                  var e = this;
                  return Object.keys(this)
                    .sort()
                    .reduce((n, r) => {
                      return t(n, e[r]);
                    }, n);
                },
                'fantasy-land/traverse': function(t, n) {
                  var e = this;
                  return Object.keys(this).reduce((t, r) => {
                    return at(
                      (t) => {
                        return function(n) {
                          var e = {};
                          return (e[r] = n), U.call(t, e);
                        };
                      },
                      t,
                      n(e[r])
                    );
                  }, ct(t, {}));
                },
              },
            },
            Function: {
              'fantasy-land/id': function() {
                return a;
              },
              'fantasy-land/of': function(t) {
                return function(n) {
                  return t;
                };
              },
              'fantasy-land/chainRec': function(t, n) {
                return function(e) {
                  for (var r = f(n); !r.done; ) r = t(f, h, r.value)(e);
                  return r.value;
                };
              },
              prototype: {
                'fantasy-land/equals': function(t) {
                  return t === this;
                },
                'fantasy-land/compose': function(t) {
                  var n = this;
                  return function(e) {
                    return t(n(e));
                  };
                },
                'fantasy-land/map': function(t) {
                  var n = this;
                  return function(e) {
                    return t(n(e));
                  };
                },
                'fantasy-land/promap': function(t, n) {
                  var e = this;
                  return function(r) {
                    return n(e(t(r)));
                  };
                },
                'fantasy-land/ap': function(t) {
                  var n = this;
                  return function(e) {
                    return t(e)(n(e));
                  };
                },
                'fantasy-land/chain': function(t) {
                  var n = this;
                  return function(e) {
                    return t(n(e))(e);
                  };
                },
                'fantasy-land/extend': function(t) {
                  var n = this;
                  return function(e) {
                    return t((t) => {
                      return n(nt(e, t));
                    });
                  };
                },
                'fantasy-land/contramap': function(t) {
                  var n = this;
                  return function(e) {
                    return n(t(e));
                  };
                },
              },
            },
          },
          Y = (function() {
            var n = [];
            function e(t, e) {
              n.push(e);
              try {
                return t.call(e);
              } finally {
                n.pop();
              }
            }
            return function(r) {
              if (n.indexOf(r) >= 0) return '<Circular>';
              var u = t(r);
              if ('Object' === u) {
                var i;
                try {
                  i = e(r.toString, r);
                } catch (t) {}
                if (null != i && '[object Object]' !== i) return i;
              }
              return e(v([u, 'prototype', 'toString']) || r.toString, r);
            };
          })(),
          H = ((V = []),
          function(t, n) {
            if (!s(t, n)) return !1;
            if (
              V.some((e) => {
                return e[0] === t && e[1] === n;
              })
            )
              return !0;
            V.push([t, n]);
            try {
              return b.test(t) && b.test(n) && b.methods.equals(t)(n);
            } finally {
              V.pop();
            }
          });
        function K(t, n) {
          return s(t, n) && !tt(n, t);
        }
        var tt = (function() {
          var t = [];
          return function(n, e) {
            if (!s(n, e)) return !1;
            if (
              t.some((t) => {
                return t[0] === n && t[1] === e;
              })
            )
              return H(n, e);
            t.push([n, e]);
            try {
              return w.test(n) && w.test(e) && w.methods.lte(n)(e);
            } finally {
              t.pop();
            }
          };
        })();
        function nt(t, n) {
          return k.methods.concat(t)(n);
        }
        function et(t) {
          return O.methods.empty(t)();
        }
        function rt(t, n) {
          return S.methods.filter(n)(t);
        }
        function ut(t, n) {
          return x.methods.map(n)(t);
        }
        function it(t, n, e) {
          return R.methods.bimap(e)(t, n);
        }
        function ot(t, n) {
          return q.methods.ap(n)(t);
        }
        function at(t, n, e) {
          return ot(ut(t, n), e);
        }
        function ct(t, n) {
          return M.methods.of(t)(n);
        }
        function st(t, n) {
          return E.methods.chain(n)(t);
        }
        function ft(t, n, e) {
          return W.methods.reduce(e)(t, n);
        }
        function ht(t, n) {
          for (
            var e = ft(
                (n, e) => {
                  for (var r = t(e), u = 0, i = n.length; u < i; ) {
                    var o = Math.floor((u + i) / 2);
                    tt(n[o].fx, r) ? (u = o + 1) : (i = o);
                  }
                  return n.splice(u, 0, { x: e, fx: r }), n;
                },
                [],
                n
              ),
              r = n.constructor,
              u = et(r),
              i = 0;
            i < e.length;
            i += 1
          )
            u = nt(u, ct(r, e[i].x));
          return u;
        }
        function pt(t, n, e) {
          return B.methods.traverse(e)(t, n);
        }
        function lt(t, n) {
          return I.methods.extend(n)(t);
        }
        return {
          TypeClass: p,
          Setoid: b,
          Ord: w,
          Semigroupoid: F,
          Category: j,
          Semigroup: k,
          Monoid: O,
          Group: A,
          Filterable: S,
          Functor: x,
          Bifunctor: R,
          Profunctor: P,
          Apply: q,
          Applicative: M,
          Chain: E,
          ChainRec: N,
          Monad: T,
          Alt: C,
          Plus: z,
          Alternative: L,
          Foldable: W,
          Traversable: B,
          Extend: I,
          Comonad: D,
          Contravariant: Q,
          toString: Y,
          equals: H,
          lt: K,
          lte: tt,
          gt: function(t, n) {
            return K(n, t);
          },
          gte: function(t, n) {
            return tt(n, t);
          },
          min: function(t, n) {
            return tt(t, n) ? t : n;
          },
          max: function(t, n) {
            return tt(t, n) ? n : t;
          },
          compose: function(t, n) {
            return F.methods.compose(n)(t);
          },
          id: function(t) {
            return j.methods.id(t)();
          },
          concat: nt,
          empty: et,
          invert: function(t) {
            return A.methods.invert(t)();
          },
          filter: rt,
          reject: function(t, n) {
            return rt((n) => {
              return !t(n);
            }, n);
          },
          map: ut,
          bimap: it,
          mapLeft: function(t, n) {
            return it(t, a, n);
          },
          promap: function(t, n, e) {
            return P.methods.promap(e)(t, n);
          },
          ap: ot,
          lift2: at,
          lift3: function(t, n, e, r) {
            return ot(ot(ut(t, n), e), r);
          },
          apFirst: function(t, n) {
            return at(u, t, n);
          },
          apSecond: function(t, n) {
            return at(u(a), t, n);
          },
          of: ct,
          append: function(t, n) {
            return nt(n, ct(n.constructor, t));
          },
          prepend: function(t, n) {
            return nt(ct(n.constructor, t), n);
          },
          chain: st,
          join: function(t) {
            return st(a, t);
          },
          chainRec: function(t, n, e) {
            return N.methods.chainRec(t)(n, e);
          },
          alt: function(t, n) {
            return C.methods.alt(t)(n);
          },
          zero: function(t) {
            return z.methods.zero(t)();
          },
          reduce: ft,
          size: function(t) {
            return Array.isArray(t)
              ? t.length
              : ft(
                  (t, n) => {
                    return t + 1;
                  },
                  0,
                  t
                );
          },
          elem: function(t, n) {
            return ft(
              (n, e) => {
                return n || H(t, e);
              },
              !1,
              n
            );
          },
          reverse: function(t) {
            if (Array.isArray(t)) return t.slice().reverse();
            var n = t.constructor;
            return ft(
              (t, e) => {
                return nt(ct(n, e), t);
              },
              et(n),
              t
            );
          },
          sort: function(t) {
            return ht(a, t);
          },
          sortBy: ht,
          takeWhile: function(t, n) {
            var e = !0;
            return rt((n) => {
              return (e = e && t(n));
            }, n);
          },
          dropWhile: function(t, n) {
            var e = !1;
            return rt((n) => {
              return (e = e || !t(n));
            }, n);
          },
          traverse: pt,
          sequence: function(t, n) {
            return pt(t, a, n);
          },
          extend: lt,
          duplicate: function(t) {
            return lt(a, t);
          },
          extract: function(t) {
            return D.methods.extract(t)();
          },
          contramap: function(t, n) {
            return Q.methods.contramap(n)(t);
          },
        };
      })(H);
    }),
    tt = Y((t) => {
      t.exports = (function() {
        var t = /^ */,
          n = /\s*[^\s]/,
          e = /\t/g,
          r = /\n\r?/;
        function u(t) {
          return n.test(t);
        }
        function i(n) {
          return n.match(t)[0].length;
        }
        function o(t) {
          return new Array(t + 1).join(' ');
        }
        function a(t, n) {
          var r = (function(t) {
              var n = t.filter(u).map(i),
                e = n.reduce(Math.min, 1 / 0),
                r =
                  n
                    .map((t) => {
                      return t - e;
                    })
                    .find((t) => {
                      return t > 1;
                    }) || 2;
              return { depth: e, tabsize: r };
            })(t.slice(1)),
            a = new RegExp(o(r.tabsize), 'g');
          return t
            .map((t) => {
              return t
                .slice(Math.min(r.depth, i(t)))
                .replace(a, '\t')
                .replace(e, n);
            })
            .join('\n');
        }
        return function t(n, u) {
          if (
            ((function(t) {
              if ('number' != typeof t)
                throw new TypeError(
                  'inspectf expects its first argument to be a number'
                );
            })(n),
            arguments.length < 2)
          )
            return function(e) {
              return t(n, e);
            };
          if (
            ((function(t) {
              if ('function' != typeof t)
                throw new TypeError(
                  'inspectf expects its second argument to be a function'
                );
            })(u),
            u.toString !== Function.prototype.toString)
          )
            return u.toString();
          var i = o(n),
            c = (function(t, n) {
              return t.toString().replace(e, n);
            })(u, i),
            s = c.split(r);
          return s.length < 2 ? c : a(s, i);
        };
      })();
    }),
    nt = Y((t) => {
      t.exports = (function(t, n) {
        var e = '@@type',
          r = ['first', 'second', 'third', 'fourth', 'fifth'];
        function u(t) {
          return 'function' == typeof t;
        }
        function i(t) {
          return t.length >= 2;
        }
        function o(n, e, u, i) {
          throw new TypeError(
            n +
              ' expects its ' +
              r[e] +
              ' argument to ' +
              u +
              '\n  Actual: ' +
              t.toString(i)
          );
        }
        function a(n, e, r) {
          throw new TypeError(
            n +
              ' was invoked outside the context of a ' +
              r +
              '. \n  Called on: ' +
              t.toString(e)
          );
        }
        return function(r, c, s, f) {
          var h,
            p,
            l = (function(t) {
              return t[e] || t.name || 'Anonymous';
            })(r),
            y = ((h = l),
            ((p = n.parse(h)).namespace || 'concurrify') +
              '/Concurrent' +
              p.name +
              '@' +
              p.version),
            _ = n.parse(l).name,
            d = n.parse(y).name;
          function v(t) {
            this.sequential = t;
          }
          function m(t) {
            return (
              t instanceof r ||
              (Boolean(t) && t.constructor === r) ||
              n(t) === r[e]
            );
          }
          function g(t) {
            return (
              t instanceof v ||
              (Boolean(t) && t.constructor === v) ||
              n(t) === y
            );
          }
          function b(t) {
            return m(t) || o(d, 0, 'be of type "' + _ + '"', t), new v(t);
          }
          (function(n) {
            try {
              return t.Applicative.test(t.of(n));
            } catch (t) {
              return !1;
            }
          })(r) || o('concurrify', 0, 'represent an Applicative', r),
            m(c) || o('concurrify', 1, 'be of type "' + _ + '"', c),
            u(s) || o('concurrify', 2, 'be a function', s),
            i(s) || o('concurrify', 2, 'be binary', s),
            u(f) || o('concurrify', 3, 'be a function', f),
            i(f) || o('concurrify', 3, 'be binary', f);
          var w = (v.prototype = b.prototype = { constructor: b });
          b[e] = y;
          var F = new v(c);
          return (
            (b['fantasy-land/zero'] = function() {
              return F;
            }),
            (b['fantasy-land/of'] = function(n) {
              return new v(t.of(r, n));
            }),
            (w['fantasy-land/map'] = function(n) {
              return (
                g(this) || a(d + '#map', this, d),
                u(n) || o(d + '#map', 0, 'be a function', n),
                new v(t.map(n, this.sequential))
              );
            }),
            (w['fantasy-land/ap'] = function(t) {
              return (
                g(this) || a(d + '#ap', this, d),
                g(t) || o(d + '#ap', 0, 'be a ' + d, t),
                new v(f(this.sequential, t.sequential))
              );
            }),
            (w['fantasy-land/alt'] = function(t) {
              return (
                g(this) || a(d + '#alt', this, d),
                g(t) || o(d + '#alt', 0, 'be a ' + d, t),
                new v(s(this.sequential, t.sequential))
              );
            }),
            (w.toString = function() {
              return (
                g(this) || a(d + '#toString', this, d),
                d + '(' + t.toString(this.sequential) + ')'
              );
            }),
            b
          );
        };
      })(K, H);
    });
  function et(t) {
    (this._head = 0),
      (this._tail = 0),
      (this._capacityMask = 3),
      (this._list = new Array(4)),
      Array.isArray(t) && this._fromArray(t);
  }
  (et.prototype.peekAt = function(t) {
    var n = t;
    if (n === (0 | n)) {
      var e = this.size();
      if (!(n >= e || n < -e))
        return (
          n < 0 && (n += e),
          (n = (this._head + n) & this._capacityMask),
          this._list[n]
        );
    }
  }),
    (et.prototype.get = function(t) {
      return this.peekAt(t);
    }),
    (et.prototype.peek = function() {
      if (this._head !== this._tail) return this._list[this._head];
    }),
    (et.prototype.peekFront = function() {
      return this.peek();
    }),
    (et.prototype.peekBack = function() {
      return this.peekAt(-1);
    }),
    Object.defineProperty(et.prototype, 'length', {
      get: function() {
        return this.size();
      },
    }),
    (et.prototype.size = function() {
      return this._head === this._tail
        ? 0
        : this._head < this._tail
          ? this._tail - this._head
          : this._capacityMask + 1 - (this._head - this._tail);
    }),
    (et.prototype.unshift = function(t) {
      if (void 0 === t) return this.size();
      var n = this._list.length;
      return (
        (this._head = (this._head - 1 + n) & this._capacityMask),
        (this._list[this._head] = t),
        this._tail === this._head && this._growArray(),
        this._head < this._tail
          ? this._tail - this._head
          : this._capacityMask + 1 - (this._head - this._tail)
      );
    }),
    (et.prototype.shift = function() {
      var t = this._head;
      if (t !== this._tail) {
        var n = this._list[t];
        return (
          (this._list[t] = void 0),
          (this._head = (t + 1) & this._capacityMask),
          t < 2 &&
            this._tail > 1e4 &&
            this._tail <= this._list.length >>> 2 &&
            this._shrinkArray(),
          n
        );
      }
    }),
    (et.prototype.push = function(t) {
      if (void 0 === t) return this.size();
      var n = this._tail;
      return (
        (this._list[n] = t),
        (this._tail = (n + 1) & this._capacityMask),
        this._tail === this._head && this._growArray(),
        this._head < this._tail
          ? this._tail - this._head
          : this._capacityMask + 1 - (this._head - this._tail)
      );
    }),
    (et.prototype.pop = function() {
      var t = this._tail;
      if (t !== this._head) {
        var n = this._list.length;
        this._tail = (t - 1 + n) & this._capacityMask;
        var e = this._list[this._tail];
        return (
          (this._list[this._tail] = void 0),
          this._head < 2 && t > 1e4 && t <= n >>> 2 && this._shrinkArray(),
          e
        );
      }
    }),
    (et.prototype.removeOne = function(t) {
      var n = t;
      if (n === (0 | n) && this._head !== this._tail) {
        var e = this.size(),
          r = this._list.length;
        if (!(n >= e || n < -e)) {
          n < 0 && (n += e), (n = (this._head + n) & this._capacityMask);
          var u,
            i = this._list[n];
          if (t < e / 2) {
            for (u = t; u > 0; u--)
              this._list[n] = this._list[
                (n = (n - 1 + r) & this._capacityMask)
              ];
            (this._list[n] = void 0),
              (this._head = (this._head + 1 + r) & this._capacityMask);
          } else {
            for (u = e - 1 - t; u > 0; u--)
              this._list[n] = this._list[
                (n = (n + 1 + r) & this._capacityMask)
              ];
            (this._list[n] = void 0),
              (this._tail = (this._tail - 1 + r) & this._capacityMask);
          }
          return i;
        }
      }
    }),
    (et.prototype.remove = function(t, n) {
      var e,
        r = t,
        u = n;
      if (r === (0 | r) && this._head !== this._tail) {
        var i = this.size(),
          o = this._list.length;
        if (!(r >= i || r < -i || n < 1)) {
          if ((r < 0 && (r += i), 1 === n || !n))
            return ((e = new Array(1))[0] = this.removeOne(r)), e;
          if (0 === r && r + n >= i)
            return (e = this.toArray()), this.clear(), e;
          var a;
          for (r + n > i && (n = i - r), e = new Array(n), a = 0; a < n; a++)
            e[a] = this._list[(this._head + r + a) & this._capacityMask];
          if (((r = (this._head + r) & this._capacityMask), t + n === i)) {
            for (
              this._tail = (this._tail - n + o) & this._capacityMask, a = n;
              a > 0;
              a--
            )
              this._list[(r = (r + 1 + o) & this._capacityMask)] = void 0;
            return e;
          }
          if (0 === t) {
            for (
              this._head = (this._head + n + o) & this._capacityMask, a = n - 1;
              a > 0;
              a--
            )
              this._list[(r = (r + 1 + o) & this._capacityMask)] = void 0;
            return e;
          }
          if (t < i / 2) {
            for (
              this._head = (this._head + t + n + o) & this._capacityMask, a = t;
              a > 0;
              a--
            )
              this.unshift(this._list[(r = (r - 1 + o) & this._capacityMask)]);
            for (r = (this._head - 1 + o) & this._capacityMask; u > 0; )
              (this._list[(r = (r - 1 + o) & this._capacityMask)] = void 0),
                u--;
          } else {
            for (
              this._tail = r,
                r = (r + n + o) & this._capacityMask,
                a = i - (n + t);
              a > 0;
              a--
            )
              this.push(this._list[r++]);
            for (r = this._tail; u > 0; )
              (this._list[(r = (r + 1 + o) & this._capacityMask)] = void 0),
                u--;
          }
          return (
            this._head < 2 &&
              this._tail > 1e4 &&
              this._tail <= o >>> 2 &&
              this._shrinkArray(),
            e
          );
        }
      }
    }),
    (et.prototype.splice = function(t, n) {
      var e = t;
      if (e === (0 | e)) {
        var r = this.size();
        if ((e < 0 && (e += r), !(e > r))) {
          if (arguments.length > 2) {
            var u,
              i,
              o,
              a = arguments.length,
              c = this._list.length,
              s = 2;
            if (!r || e < r / 2) {
              for (i = new Array(e), u = 0; u < e; u++)
                i[u] = this._list[(this._head + u) & this._capacityMask];
              for (
                0 === n
                  ? ((o = []),
                    e > 0 &&
                      (this._head = (this._head + e + c) & this._capacityMask))
                  : ((o = this.remove(e, n)),
                    (this._head = (this._head + e + c) & this._capacityMask));
                a > s;

              )
                this.unshift(arguments[--a]);
              for (u = e; u > 0; u--) this.unshift(i[u - 1]);
            } else {
              var f = (i = new Array(r - (e + n))).length;
              for (u = 0; u < f; u++)
                i[u] = this._list[
                  (this._head + e + n + u) & this._capacityMask
                ];
              for (
                0 === n
                  ? ((o = []),
                    e != r &&
                      (this._tail = (this._head + e + c) & this._capacityMask))
                  : ((o = this.remove(e, n)),
                    (this._tail = (this._tail - f + c) & this._capacityMask));
                s < a;

              )
                this.push(arguments[s++]);
              for (u = 0; u < f; u++) this.push(i[u]);
            }
            return o;
          }
          return this.remove(e, n);
        }
      }
    }),
    (et.prototype.clear = function() {
      (this._head = 0), (this._tail = 0);
    }),
    (et.prototype.isEmpty = function() {
      return this._head === this._tail;
    }),
    (et.prototype.toArray = function() {
      return this._copyArray(!1);
    }),
    (et.prototype._fromArray = function(t) {
      for (var n = 0; n < t.length; n++) this.push(t[n]);
    }),
    (et.prototype._copyArray = function(t) {
      var n,
        e = [],
        r = this._list,
        u = r.length;
      if (t || this._head > this._tail) {
        for (n = this._head; n < u; n++) e.push(r[n]);
        for (n = 0; n < this._tail; n++) e.push(r[n]);
      } else for (n = this._head; n < this._tail; n++) e.push(r[n]);
      return e;
    }),
    (et.prototype._growArray = function() {
      this._head && ((this._list = this._copyArray(!0)), (this._head = 0)),
        (this._tail = this._list.length),
        (this._list.length *= 2),
        (this._capacityMask = (this._capacityMask << 1) | 1);
    }),
    (et.prototype._shrinkArray = function() {
      (this._list.length >>>= 1), (this._capacityMask >>>= 1);
    });
  var rt = et,
    ut = Y((t, n) => {
      t.exports = (function(t, n, e, r, u) {
        (t = t && t.hasOwnProperty('default') ? t.default : t),
          (n = n && n.hasOwnProperty('default') ? n.default : n),
          (e = e && e.hasOwnProperty('default') ? e.default : e),
          (r = r && r.hasOwnProperty('default') ? r.default : r),
          (u = u && u.hasOwnProperty('default') ? u.default : u);
        const i =
            'object' == typeof self
              ? self
              : 'object' == typeof X
                ? X
                : 'object' == typeof window ? window : {},
          o =
            'function' == typeof i.setImmediate
              ? i.setImmediate
              : function(t, n) {
                  return setTimeout(t, 0, n);
                };
        function a() {}
        function c() {
          return this;
        }
        var s = t.toString;
        function f(t) {
          return (
            (e = '  '),
            n(2, t)
              .replace(/^/gm, e)
              .replace(e, '')
          );
          var e;
        }
        function h(t, n) {
          return function(e, r, u) {
            switch (arguments.length) {
              case 1:
                return t(n, e);
              case 2:
                return t(n, e, r);
              default:
                return t(n, e, r, u);
            }
          };
        }
        function p(t, n, e) {
          return function(r, u) {
            return 1 === arguments.length ? t(n, e, r) : t(n, e, r, u);
          };
        }
        function l(t, n, e, r) {
          return function(u) {
            return t(n, e, r, u);
          };
        }
        function y(t) {
          return function(n) {
            return o(t, n);
          };
        }
        var _ = {
            map: 'fantasy-land/map',
            bimap: 'fantasy-land/bimap',
            chain: 'fantasy-land/chain',
            chainRec: 'fantasy-land/chainRec',
            ap: 'fantasy-land/ap',
            of: 'fantasy-land/of',
            zero: 'fantasy-land/zero',
          },
          d = ['first', 'second', 'third', 'fourth', 'fifth'],
          v = 'fluture',
          m = 'Future',
          g = 3,
          b = v + '/' + m + '@' + g;
        function w(t) {
          throw new Error(t);
        }
        function F(t) {
          throw new TypeError(t);
        }
        function j(t, n, e, r) {
          F(
            t +
              ' expects its ' +
              d[n] +
              ' argument to ' +
              e +
              '\n  Actual: ' +
              s(r)
          );
        }
        function k(t, n) {
          F(
            t +
              ' was invoked outside the context of a Future. You might want to use a dispatcher instead\n  Called on: ' +
              s(n)
          );
        }
        function O(t, n, r, u) {
          var i,
            o = e.parse(e(r)),
            a =
              o.name === m
                ? '\n' +
                  (o.namespace !== v
                    ? ((i = o.namespace),
                      'The Future was not created by ' +
                        v +
                        '. Make sure you transform other Futures to ' +
                        v +
                        ' Futures. Got ' +
                        (i ? 'a Future from ' + i : 'an unscoped Future') +
                        '.\n  See: https://github.com/fluture-js/Fluture#casting-futures')
                    : o.version !== g
                      ? (function(t, n) {
                          return (
                            'The Future was created by ' +
                            (n < g ? 'an older' : 'a newer') +
                            ' version of ' +
                            v +
                            '. This means that one of the sources which creates Futures is outdated. Update this source, or transform its created Futures to be compatible.\n  See: https://github.com/fluture-js/Fluture#casting-futures'
                          );
                        })(0, o.version)
                      : 'Nothing seems wrong. Contact the Fluture maintainers.')
                : '';
          F(
            t +
              ' expects ' +
              (d[n] ? 'its ' + d[n] + ' argument to be a valid Future' : n) +
              '.' +
              a +
              '\n  Actual: ' +
              s(r) +
              ' :: ' +
              o.name +
              (u || '')
          );
        }
        function A(t) {
          return 'function' == typeof t;
        }
        function S(t) {
          return t instanceof Promise || (Boolean(t) && A(t.then));
        }
        function x(t) {
          return t === 1 / 0 || ('number' == typeof t && t > 0 && t % 1 == 0);
        }
        function R(t) {
          return null !== t && 'object' == typeof t;
        }
        var P = { isEmpty: !0, size: 0, head: null, tail: null };
        function q(t) {
          w(
            'Future#value was called on a rejected Future\n  Actual: Future.reject(' +
              s(t) +
              ')'
          );
        }
        function M(t) {
          return A(t) || j('Future', 0, 'be a Function', t), new T(t);
        }
        function E(t) {
          return t instanceof M || e(t) === b;
        }
        (M['@@type'] = b),
          (M.prototype[_.ap] = function(t) {
            return t._ap(this);
          }),
          (M.prototype[_.map] = function(t) {
            return this._map(t);
          }),
          (M.prototype[_.bimap] = function(t, n) {
            return this._bimap(t, n);
          }),
          (M.prototype[_.chain] = function(t) {
            return this._chain(t);
          }),
          (M.prototype.ap = function(t) {
            return (
              E(this) || k('Future#ap', this),
              E(t) || O('Future#ap', 0, t),
              this._ap(t)
            );
          }),
          (M.prototype.map = function(t) {
            return (
              E(this) || k('Future#map', this),
              A(t) || j('Future#map', 0, 'to be a Function', t),
              this._map(t)
            );
          }),
          (M.prototype.bimap = function(t, n) {
            return (
              E(this) || k('Future#bimap', this),
              A(t) || j('Future#bimap', 0, 'to be a Function', t),
              A(n) || j('Future#bimap', 1, 'to be a Function', n),
              this._bimap(t, n)
            );
          }),
          (M.prototype.chain = function(t) {
            return (
              E(this) || k('Future#chain', this),
              A(t) || j('Future#chain', 0, 'to be a Function', t),
              this._chain(t)
            );
          }),
          (M.prototype.mapRej = function(t) {
            return (
              E(this) || k('Future#mapRej', this),
              A(t) || j('Future#mapRej', 0, 'to be a Function', t),
              this._mapRej(t)
            );
          }),
          (M.prototype.chainRej = function(t) {
            return (
              E(this) || k('Future#chainRej', this),
              A(t) || j('Future#chainRej', 0, 'to be a Function', t),
              this._chainRej(t)
            );
          }),
          (M.prototype.race = function(t) {
            return (
              E(this) || k('Future#race', this),
              E(t) || O('Future#race', 0, t),
              this._race(t)
            );
          }),
          (M.prototype.both = function(t) {
            return (
              E(this) || k('Future#both', this),
              E(t) || O('Future#both', 0, t),
              this._both(t)
            );
          }),
          (M.prototype.and = function(t) {
            return (
              E(this) || k('Future#and', this),
              E(t) || O('Future#and', 0, t),
              this._and(t)
            );
          }),
          (M.prototype.or = function(t) {
            return (
              E(this) || k('Future#or', this),
              E(t) || O('Future#or', 0, t),
              this._or(t)
            );
          }),
          (M.prototype.swap = function() {
            return E(this) || k('Future#ap', this), this._swap();
          }),
          (M.prototype.fold = function(t, n) {
            return (
              E(this) || k('Future#ap', this),
              A(t) || j('Future#fold', 0, 'to be a Function', t),
              A(n) || j('Future#fold', 1, 'to be a Function', n),
              this._fold(t, n)
            );
          }),
          (M.prototype.finally = function(t) {
            return (
              E(this) || k('Future#finally', this),
              E(t) || O('Future#finally', 0, t),
              this._finally(t)
            );
          }),
          (M.prototype.lastly = function(t) {
            return (
              E(this) || k('Future#lastly', this),
              E(t) || O('Future#lastly', 0, t),
              this._finally(t)
            );
          }),
          (M.prototype.fork = function(t, n) {
            return (
              E(this) || k('Future#fork', this),
              A(t) || j('Future#fork', 0, 'to be a Function', t),
              A(n) || j('Future#fork', 0, 'to be a Function', n),
              this._fork(t, n)
            );
          }),
          (M.prototype.value = function(t) {
            return (
              E(this) || k('Future#value', this),
              A(t) || j('Future#value', 0, 'to be a Function', t),
              this._fork(q, t)
            );
          }),
          (M.prototype.done = function(t) {
            return (
              E(this) || k('Future#done', this),
              A(t) || j('Future#done', 0, 'to be a Function', t),
              this._fork(
                (n) => {
                  t(n);
                },
                (n) => {
                  t(null, n);
                }
              )
            );
          }),
          (M.prototype.promise = function() {
            var t = this;
            return new Promise(((n, e) => {
              t._fork(e, n);
            }));
          }),
          (M.prototype.isRejected = function() {
            return !1;
          }),
          (M.prototype.isResolved = function() {
            return !1;
          }),
          (M.prototype.isSettled = function() {
            return this.isRejected() || this.isResolved();
          }),
          (M.prototype.extractLeft = function() {
            return [];
          }),
          (M.prototype.extractRight = function() {
            return [];
          });
        var N = Object.create(M.prototype);
        function T(t) {
          this._computation = t;
        }
        function C(t) {
          this._value = t;
        }
        function z(t) {
          return new C(t);
        }
        function L(t) {
          this._value = t;
        }
        function W(t) {
          return new L(t);
        }
        function B() {
          this._isNever = !0;
        }
        (N._ap = function(t) {
          return new at(this)._ap(t);
        }),
          (N._map = function(t) {
            return new at(this)._map(t);
          }),
          (N._bimap = function(t, n) {
            return new at(this)._bimap(t, n);
          }),
          (N._chain = function(t) {
            return new at(this)._chain(t);
          }),
          (N._mapRej = function(t) {
            return new at(this)._mapRej(t);
          }),
          (N._chainRej = function(t) {
            return new at(this)._chainRej(t);
          }),
          (N._race = function(t) {
            return new at(this)._race(t);
          }),
          (N._both = function(t) {
            return new at(this)._both(t);
          }),
          (N._and = function(t) {
            return new at(this)._and(t);
          }),
          (N._or = function(t) {
            return new at(this)._or(t);
          }),
          (N._swap = function() {
            return new at(this)._swap();
          }),
          (N._fold = function(t, n) {
            return new at(this)._fold(t, n);
          }),
          (N._finally = function(t) {
            return new at(this)._finally(t);
          }),
          (T.prototype = Object.create(N)),
          (T.prototype._fork = function(t, n) {
            var e = !0,
              r = this._computation(
                (n) => {
                  e && ((e = !1), t(n));
                },
                (t) => {
                  e && ((e = !1), n(t));
                }
              );
            return (
              (function(t, n) {
                void 0 === t ||
                  (A(t) && 0 === t.length) ||
                  F(
                    'Future expected its computation to return a nullary function or void\n  Actual: ' +
                      s(t) +
                      '\n  From calling: ' +
                      f(n)
                  );
              })(r, this._computation),
              function() {
                e && r && r(), (e = !1);
              }
            );
          }),
          (T.prototype.toString = function() {
            return 'Future(' + f(this._computation) + ')';
          }),
          (C.prototype = Object.create(N)),
          (C.prototype._ap = c),
          (C.prototype._map = c),
          (C.prototype._chain = c),
          (C.prototype._race = c),
          (C.prototype._both = c),
          (C.prototype._and = c),
          (C.prototype._or = function(t) {
            return t;
          }),
          (C.prototype._finally = function(t) {
            return t._and(this);
          }),
          (C.prototype._swap = function() {
            return new L(this._value);
          }),
          (C.prototype._fork = function(t) {
            return t(this._value), a;
          }),
          (C.prototype.isRejected = function() {
            return !0;
          }),
          (C.prototype.extractLeft = function() {
            return [this._value];
          }),
          (C.prototype.toString = function() {
            return 'Future.reject(' + s(this._value) + ')';
          }),
          (L.prototype = Object.create(N)),
          (L.prototype._race = c),
          (L.prototype._mapRej = c),
          (L.prototype._or = c),
          (L.prototype._and = function(t) {
            return t;
          }),
          (L.prototype._both = function(t) {
            var n = this._value;
            return t._map((t) => {
              return [n, t];
            });
          }),
          (L.prototype._swap = function() {
            return new C(this._value);
          }),
          (L.prototype._finally = function(t) {
            var n = this._value;
            return t._map(() => {
              return n;
            });
          }),
          (L.prototype._fork = function(t, n) {
            return n(this._value), a;
          }),
          (L.prototype.isResolved = function() {
            return !0;
          }),
          (L.prototype.extractRight = function() {
            return [this._value];
          }),
          (L.prototype.toString = function() {
            return 'Future.of(' + s(this._value) + ')';
          }),
          (B.prototype = Object.create(M.prototype)),
          (B.prototype._ap = c),
          (B.prototype._map = c),
          (B.prototype._bimap = c),
          (B.prototype._chain = c),
          (B.prototype._mapRej = c),
          (B.prototype._chainRej = c),
          (B.prototype._both = c),
          (B.prototype._or = c),
          (B.prototype._swap = c),
          (B.prototype._fold = c),
          (B.prototype._finally = c),
          (B.prototype._race = function(t) {
            return t;
          }),
          (B.prototype._fork = function() {
            return a;
          }),
          (B.prototype.toString = function() {
            return 'Future.never';
          });
        var I = new B();
        function D(t) {
          return E(t) && !0 === t._isNever;
        }
        function Q(t) {
          var n = this;
          (n.rej = a),
            (n.res = a),
            (n.rejected = !1),
            (n.resolved = !1),
            (n.value = null),
            (n.cancel = t._fork(
              (t) => {
                (n.value = t), (n.rejected = !0), (n.cancel = a), n.rej(t);
              },
              (t) => {
                (n.value = t), (n.resolved = !0), (n.cancel = a), n.res(t);
              }
            ));
        }
        (Q.prototype = Object.create(N)),
          (Q.prototype._fork = function(t, n) {
            return (
              this.rejected
                ? t(this.value)
                : this.resolved
                  ? n(this.value)
                  : ((this.rej = t), (this.res = n)),
              this.cancel
            );
          });
        var G = {
          rejected: function(t) {
            return this.cancel(), new C(t);
          },
          resolved: function(t) {
            return this.cancel(), new L(t);
          },
          run: function() {
            return this;
          },
          cancel: function() {},
        };
        function Z(t) {
          this.other = t;
        }
        function $(t) {
          this.mapper = t;
        }
        function J(t, n) {
          (this.lmapper = t), (this.rmapper = n);
        }
        function U(t) {
          this.mapper = t;
        }
        function V(t) {
          this.mapper = t;
        }
        function Y(t) {
          this.mapper = t;
        }
        function H() {}
        function K(t, n) {
          (this.lmapper = t), (this.rmapper = n);
        }
        function tt(t) {
          this.other = t;
        }
        function nt(t) {
          this.other = t;
        }
        function et(t) {
          this.other = t;
        }
        function rt(t) {
          this.other = t;
        }
        function ut(t) {
          this.other = t;
        }
        function it(t, n) {
          var e = this;
          (e.other = n),
            (e.cancel = n._fork(
              (n) => {
                t(new C(n), e);
              },
              (n) => {
                t(new L(n), e);
              }
            ));
        }
        function ot(t, n) {
          var e = this;
          (e.other = n),
            (e.cancel = n._fork((n) => {
              t(new C(n), e);
            }, a));
        }
        function at(t, n) {
          (this._spawn = t), (this._actions = n || P);
        }
        function ct(t) {
          return { done: !1, value: t };
        }
        function st(t) {
          return { done: !0, value: t };
        }
        (Z.prototype = Object.create(G)),
          (Z.prototype.resolved = function(t) {
            return (
              (function(t) {
                A(t) ||
                  F(
                    'Future#ap expects its first argument to be a Future of a Function\n  Actual: Future.of(' +
                      s(t) +
                      ')'
                  );
              })(t),
              this.other._map((n) => {
                return t(n);
              })
            );
          }),
          (Z.prototype.toString = function() {
            return 'ap(' + this.other.toString() + ')';
          }),
          ($.prototype = Object.create(G)),
          ($.prototype.resolved = function(t) {
            return new L(this.mapper(t));
          }),
          ($.prototype.toString = function() {
            return 'map(' + f(this.mapper) + ')';
          }),
          (J.prototype = Object.create(G)),
          (J.prototype.rejected = function(t) {
            return new C(this.lmapper(t));
          }),
          (J.prototype.resolved = function(t) {
            return new L(this.rmapper(t));
          }),
          (J.prototype.toString = function() {
            return 'bimap(' + f(this.lmapper) + ', ' + f(this.rmapper) + ')';
          }),
          (U.prototype = Object.create(G)),
          (U.prototype.resolved = function(t) {
            return (function(t, n, e) {
              return E(t)
                ? t
                : O(
                    'Future#chain',
                    "the function it's given to return a Future",
                    t,
                    '\n  From calling: ' + f(n) + '\n  With: ' + s(e)
                  );
            })(this.mapper(t), this.mapper, t);
          }),
          (U.prototype.toString = function() {
            return 'chain(' + f(this.mapper) + ')';
          }),
          (V.prototype = Object.create(G)),
          (V.prototype.rejected = function(t) {
            return new C(this.mapper(t));
          }),
          (V.prototype.toString = function() {
            return 'mapRej(' + f(this.mapper) + ')';
          }),
          (Y.prototype = Object.create(G)),
          (Y.prototype.rejected = function(t) {
            return (function(t, n, e) {
              return E(t)
                ? t
                : O(
                    'Future#chainRej',
                    "the function it's given to return a Future",
                    t,
                    '\n  From calling: ' + f(n) + '\n  With: ' + s(e)
                  );
            })(this.mapper(t), this.mapper, t);
          }),
          (Y.prototype.toString = function() {
            return 'chainRej(' + f(this.mapper) + ')';
          }),
          (H.prototype = Object.create(G)),
          (H.prototype.rejected = function(t) {
            return new L(t);
          }),
          (H.prototype.resolved = function(t) {
            return new C(t);
          }),
          (H.prototype.toString = function() {
            return 'swap()';
          }),
          (K.prototype = Object.create(G)),
          (K.prototype.rejected = function(t) {
            return new L(this.lmapper(t));
          }),
          (K.prototype.resolved = function(t) {
            return new L(this.rmapper(t));
          }),
          (K.prototype.toString = function() {
            return 'fold(' + f(this.lmapper) + ', ' + f(this.rmapper) + ')';
          }),
          (tt.prototype = Object.create(G)),
          (tt.prototype.rejected = function(t) {
            return this.other._and(new C(t));
          }),
          (tt.prototype.resolved = function(t) {
            return this.other._map(() => {
              return t;
            });
          }),
          (tt.prototype.cancel = function() {
            this.other._fork(a, a)();
          }),
          (tt.prototype.toString = function() {
            return 'finally(' + this.other.toString() + ')';
          }),
          (nt.prototype = Object.create(G)),
          (nt.prototype.resolved = function() {
            return this.other;
          }),
          (nt.prototype.toString = function() {
            return 'and(' + this.other.toString() + ')';
          }),
          (et.prototype = Object.create(G)),
          (et.prototype.rejected = function() {
            return this.other;
          }),
          (et.prototype.toString = function() {
            return 'or(' + this.other.toString() + ')';
          }),
          (rt.prototype = Object.create(G)),
          (rt.prototype.run = function(t) {
            return new it(t, new Q(this.other));
          }),
          (rt.prototype.toString = function() {
            return 'race(' + this.other.toString() + ')';
          }),
          (ut.prototype = Object.create(G)),
          (ut.prototype.resolved = function(t) {
            return this.other._map((n) => {
              return [t, n];
            });
          }),
          (ut.prototype.run = function(t) {
            return new ot(t, new Q(this.other));
          }),
          (ut.prototype.toString = function() {
            return 'both(' + this.other.toString() + ')';
          }),
          (it.prototype = Object.create(rt.prototype)),
          (ot.prototype = Object.create(ut.prototype)),
          (at.prototype = Object.create(M.prototype)),
          (at.prototype._transform = function(t) {
            return new at(
              this._spawn,
              ((n = t),
              {
                isEmpty: !1,
                size: (e = this._actions).size + 1,
                head: n,
                tail: e,
              })
            );
            var n, e;
          }),
          (at.prototype._ap = function(t) {
            return this._transform(new Z(t));
          }),
          (at.prototype._map = function(t) {
            return this._transform(new $(t));
          }),
          (at.prototype._bimap = function(t, n) {
            return this._transform(new J(t, n));
          }),
          (at.prototype._chain = function(t) {
            return this._transform(new U(t));
          }),
          (at.prototype._mapRej = function(t) {
            return this._transform(new V(t));
          }),
          (at.prototype._chainRej = function(t) {
            return this._transform(new Y(t));
          }),
          (at.prototype._race = function(t) {
            return D(t) ? this : this._transform(new rt(t));
          }),
          (at.prototype._both = function(t) {
            return this._transform(new ut(t));
          }),
          (at.prototype._and = function(t) {
            return this._transform(new nt(t));
          }),
          (at.prototype._or = function(t) {
            return this._transform(new et(t));
          }),
          (at.prototype._swap = function() {
            return this._transform(new H());
          }),
          (at.prototype._fold = function(t, n) {
            return this._transform(new K(t, n));
          }),
          (at.prototype._finally = function(t) {
            return this._transform(new tt(t));
          }),
          (at.prototype._fork = function(t, n) {
            var e,
              r,
              i,
              o,
              c = new u(this._actions.size),
              s = new u(this._actions.size),
              f = a,
              h = !0;
            function p(u) {
              if (((i = !0), (e = u)._spawn)) {
                for (var o = e._actions; !o.isEmpty; )
                  c.unshift(o.head), (o = o.tail);
                e = e._spawn;
              }
              h &&
                (function() {
                  for (h = !1; ; ) {
                    if (((i = !1), (r = c.shift())))
                      (f = e._fork(l, y)), i || d();
                    else {
                      if (!(r = s.shift())) break;
                      f = e._fork(l, y);
                    }
                    if (!i) return void (h = !0);
                  }
                  f = e._fork(t, n);
                })();
            }
            function l(t) {
              p(r.rejected(t));
            }
            function y(t) {
              p(r.resolved(t));
            }
            function _(t, n) {
              if ((f(), c.clear(), h && r !== n))
                for (r.cancel(); (o = s.shift()) && o !== n; ) o.cancel();
              p(t);
            }
            function d() {
              for (; (o = c.pop()); ) {
                if (((o = o.run(_)), i)) return;
                s.unshift(o);
              }
              r = r.run(_);
            }
            return (
              p(this),
              function() {
                for (f(), r && r.cancel(); (o = s.shift()); ) o.cancel();
              }
            );
          }),
          (at.prototype.toString = function() {
            for (var t = '', n = this._actions; !n.isEmpty; )
              (t = '.' + n.head.toString() + t), (n = n.tail);
            return this._spawn.toString() + t;
          });
        var ft = 0,
          ht = 1,
          pt = 2;
        function lt(t, n) {
          (this._step = t), (this._init = n);
        }
        function yt(n, e) {
          return (
            t.Apply.test(e) || j('Future.ap', 1, 'be an Apply', e), t.ap(n, e)
          );
        }
        function _t(n, e) {
          return (
            t.Apply.test(n) || j('Future.ap', 0, 'be an Apply', n),
            1 === arguments.length ? h(yt, n) : yt(n, e)
          );
        }
        function dt(n, e) {
          return t.Alt.test(e) || j('alt', 1, 'be an Alt', e), t.alt(n, e);
        }
        function vt(n, e) {
          return (
            t.Alt.test(n) || j('alt', 0, 'be an Alt', n),
            1 === arguments.length ? h(dt, n) : dt(n, e)
          );
        }
        function mt(n, e) {
          return (
            t.Functor.test(e) || j('Future.map', 1, 'be a Functor', e),
            t.map(n, e)
          );
        }
        function gt(t, n) {
          return (
            A(t) || j('Future.map', 0, 'be a Function', t),
            1 === arguments.length ? h(mt, t) : mt(t, n)
          );
        }
        function bt(n, e, r) {
          return (
            t.Bifunctor.test(r) || j('Future.bimap', 2, 'be a Bifunctor', r),
            t.bimap(n, e, r)
          );
        }
        function wt(t, n, e) {
          return (
            A(n) || j('Future.bimap', 1, 'be a Function', n),
            2 === arguments.length ? p(bt, t, n) : bt(t, n, e)
          );
        }
        function Ft(t, n, e) {
          return (
            A(t) || j('Future.bimap', 0, 'be a Function', t),
            1 === arguments.length
              ? h(wt, t)
              : 2 === arguments.length ? wt(t, n) : wt(t, n, e)
          );
        }
        function jt(n, e) {
          return (
            t.Chain.test(e) || j('Future.chain', 1, 'be a Chain', e),
            t.chain(n, e)
          );
        }
        function kt(t, n) {
          return (
            A(t) || j('Future.chain', 0, 'be a Function', t),
            1 === arguments.length ? h(jt, t) : jt(t, n)
          );
        }
        function Ot(t, n) {
          return E(n) || O('Future.mapRej', 1, n), n.mapRej(t);
        }
        function At(t, n) {
          return E(n) || O('Future.chainRej', 1, n), n.chainRej(t);
        }
        function St(t, n) {
          return E(n) || O('Future.finally', 1, n), n.finally(t);
        }
        function xt(t, n) {
          return (
            E(t) || O('Future.finally', 0, t),
            1 === arguments.length ? h(St, t) : St(t, n)
          );
        }
        function Rt(t, n) {
          return E(n) || O('Future.and', 1, n), t.and(n);
        }
        function Pt(t, n) {
          return E(n) || O('Future.both', 1, n), t.both(n);
        }
        function qt(t, n) {
          return E(n) || O('Future.or', 1, n), t.or(n);
        }
        function Mt(t, n) {
          return E(n) || O('Future.race', 1, n), n.race(t);
        }
        function Et(t, n) {
          return (
            E(t) || O('Future.race', 0, t),
            1 === arguments.length ? h(Mt, t) : Mt(t, n)
          );
        }
        function Nt(t, n, e) {
          return E(e) || O('Future.fold', 2, e), e.fold(t, n);
        }
        function Tt(t, n, e) {
          return (
            A(n) || j('Future.fold', 1, 'be a function', n),
            2 === arguments.length ? p(Nt, t, n) : Nt(t, n, e)
          );
        }
        function Ct(t, n) {
          return E(n) || O('Future.done', 1, n), n.done(t);
        }
        function zt(t, n, e) {
          return E(e) || O('Future.fork', 2, e), e._fork(t, n);
        }
        function Lt(t, n, e) {
          return (
            A(n) || j('Future.fork', 1, 'be a function', n),
            2 === arguments.length ? p(zt, t, n) : zt(t, n, e)
          );
        }
        function Wt(t, n) {
          return E(n) || O('Future.value', 1, n), n.value(t);
        }
        function Bt(t, n) {
          (this._mval = t), (this._mfunc = n);
        }
        function It(t) {
          return t.isSettled()
            ? t
            : D(t)
              ? this
              : 'number' == typeof t._time
                ? t._time < this._time ? t : this
                : N._race.call(this, t);
        }
        function Dt(t, n) {
          (this._time = t), (this._value = n);
        }
        function Qt(t, n) {
          (this._time = t), (this._value = n);
        }
        function Gt(t, n) {
          return t === 1 / 0 ? I : new Dt(t, n);
        }
        function Zt(t, n) {
          return t === 1 / 0 ? I : new Qt(t, n);
        }
        function $t(t) {
          this._fn = t;
        }
        function Jt(t) {
          return A(t) || j('Future.try', 0, 'be a function', t), new $t(t);
        }
        (lt.prototype = Object.create(N)),
          (lt.prototype._fork = function(t, n) {
            var e = this._step,
              r = this._init,
              u = ft,
              i = a,
              o = ct(r);
            function c(t) {
              (o = t), (u = u === ft ? ht : s());
            }
            function s() {
              for (; !o.done; ) {
                u = ft;
                var r = e(ct, st, o.value);
                if (((i = r._fork(t, c)), u !== ht)) return void (u = pt);
              }
              n(o.value);
            }
            return (
              s(),
              function() {
                i();
              }
            );
          }),
          (lt.prototype.toString = function() {
            return (
              'Future.chainRec(' + f(this._step) + ', ' + s(this._init) + ')'
            );
          }),
          (Bt.prototype = Object.create(N)),
          (Bt.prototype._fork = function(t, n) {
            var e,
              r,
              u,
              i,
              o = !1,
              c = !1,
              f = !1;
            function h(n) {
              f || ((f = !0), t(n));
            }
            return (
              (u = this._mval._fork(h, (t) => {
                if (((u = a), !o)) return (c = !0), void (r = t);
                n(e(t));
              })),
              (i = this._mfunc._fork(h, (t) => {
                if (
                  ((i = a),
                  (function(t) {
                    A(t) ||
                      F(
                        'Future#ap expects its first argument to be a Future of a Function\n  Actual: Future.of(' +
                          s(t) +
                          ')'
                      );
                  })(t),
                  !c)
                )
                  return (o = !0), void (e = t);
                n(t(r));
              })),
              function() {
                u(), i();
              }
            );
          }),
          (Bt.prototype.toString = function() {
            return (
              'new ParallelAp(' +
              this._mval.toString() +
              ', ' +
              this._mfunc.toString() +
              ')'
            );
          }),
          (Dt.prototype = Object.create(N)),
          (Dt.prototype._race = It),
          (Dt.prototype._swap = function() {
            return new Qt(this._time, this._value);
          }),
          (Dt.prototype._fork = function(t, n) {
            var e = setTimeout(n, this._time, this._value);
            return function() {
              clearTimeout(e);
            };
          }),
          (Dt.prototype.extractRight = function() {
            return [this._value];
          }),
          (Dt.prototype.toString = function() {
            return (
              'Future.after(' + s(this._time) + ', ' + s(this._value) + ')'
            );
          }),
          (Qt.prototype = Object.create(N)),
          (Qt.prototype._race = It),
          (Qt.prototype._swap = function() {
            return new Dt(this._time, this._value);
          }),
          (Qt.prototype._fork = function(t) {
            var n = setTimeout(t, this._time, this._value);
            return function() {
              clearTimeout(n);
            };
          }),
          (Qt.prototype.extractLeft = function() {
            return [this._value];
          }),
          (Qt.prototype.toString = function() {
            return (
              'Future.rejectAfter(' +
              s(this._time) +
              ', ' +
              s(this._value) +
              ')'
            );
          }),
          ($t.prototype = Object.create(N)),
          ($t.prototype._fork = function(t, n) {
            var e;
            try {
              e = this._fn();
            } catch (n) {
              return t(n), a;
            }
            return n(e), a;
          }),
          ($t.prototype.toString = function() {
            return 'Future.try(' + f(this._fn) + ')';
          });
        var Ut = (Ht.Cold = 0),
          Vt = (Ht.Pending = 1),
          Xt = (Ht.Rejected = 2),
          Yt = (Ht.Resolved = 3);
        function Ht(t) {
          (this._pure = t), this.reset();
        }
        function Kt(t, n) {
          (this._fn = t), (this._a = n);
        }
        function tn(t, n, e) {
          (this._fn = t), (this._a = n), (this._b = e);
        }
        function nn(t, n, e, r) {
          (this._fn = t), (this._a = n), (this._b = e), (this._c = r);
        }
        function en(t, n) {
          (this._fn = t), (this._a = n);
        }
        function rn(t, n, e) {
          (this._fn = t), (this._a = n), (this._b = e);
        }
        function un(t, n, e, r) {
          (this._fn = t), (this._a = n), (this._b = e), (this._c = r);
        }
        function on(t, n) {
          (this._fn = t), (this._a = n);
        }
        function an(t, n, e) {
          (this._fn = t), (this._a = n), (this._b = e);
        }
        function cn(t, n, e, r) {
          (this._fn = t), (this._a = n), (this._b = e), (this._c = r);
        }
        function sn(t) {
          return R((n = t)) && A(n.next)
            ? t
            : j(
                'Future.do',
                0,
                'return an iterator, maybe you forgot the "*"',
                t
              );
          var n;
        }
        function fn(t) {
          var n;
          return (
            (R((n = t)) && 'boolean' == typeof n.done) ||
              F(
                'Future.do was given an invalid generator: Its iterator did not return a valid iteration from iterator.next()\n  Actual: ' +
                  s(t)
              ),
            t.done || E(t.value)
              ? t
              : O(
                  'Future.do',
                  'the iterator to produce only valid Futures',
                  t.value,
                  "\n  Tip: If you're using a generator, make sure you always yield a Future"
                )
          );
        }
        function hn(t) {
          this._generator = t;
        }
        function pn(t) {
          return A(t) || j('Future.do', 0, 'be a Function', t), new hn(t);
        }
        function ln(t, n, e) {
          (this._acquire = t), (this._dispose = n), (this._consume = e);
        }
        function yn(t, n, e) {
          return A(e) || j('Future.hook', 2, 'be a Future', e), new ln(t, n, e);
        }
        function _n(t, n, e) {
          return (
            A(n) || j('Future.hook', 1, 'be a function', n),
            2 === arguments.length ? p(yn, t, n) : yn(t, n, e)
          );
        }
        function dn(t) {
          this._fn = t;
        }
        function vn(t, n) {
          return E(t)
            ? t
            : O(
                'Future.parallel',
                'its second argument to be an array of valid Futures. The value at position ' +
                  n +
                  ' in the array is not a Future',
                t
              );
        }
        function mn(t, n) {
          (this._futures = n),
            (this._length = n.length),
            (this._max = Math.min(this._length, t));
        }
        (Ht.prototype = Object.create(N)),
          (Ht.prototype.isRejected = function() {
            return this._state === Xt;
          }),
          (Ht.prototype.isResolved = function() {
            return this._state === Yt;
          }),
          (Ht.prototype.extractLeft = function() {
            return this.isRejected() ? [this._value] : [];
          }),
          (Ht.prototype.extractRight = function() {
            return this.isResolved() ? [this._value] : [];
          }),
          (Ht.prototype._addToQueue = function(t, n) {
            var e = this;
            if (e._state > Vt) return a;
            var r =
              e._queue.push(
                new function(t, n) {
                  (this[Xt] = t), (this[Yt] = n);
                }(t, n)
              ) - 1;
            return (
              (e._queued = e._queued + 1),
              function() {
                e._state > Vt ||
                  ((e._queue[r] = void 0),
                  (e._queued = e._queued - 1),
                  0 === e._queued && e.reset());
              }
            );
          }),
          (Ht.prototype._drainQueue = function() {
            if (!(this._state <= Vt) && 0 !== this._queued) {
              for (
                var t = this._queue,
                  n = t.length,
                  e = this._state,
                  r = this._value,
                  u = 0;
                u < n;
                u++
              )
                t[u] && t[u][e](r), (t[u] = void 0);
              (this._queue = void 0), (this._queued = 0);
            }
          }),
          (Ht.prototype.reject = function(t) {
            this._state > Vt ||
              ((this._value = t), (this._state = Xt), this._drainQueue());
          }),
          (Ht.prototype.resolve = function(t) {
            this._state > Vt ||
              ((this._value = t), (this._state = Yt), this._drainQueue());
          }),
          (Ht.prototype.run = function() {
            var t = this;
            t._state > Ut ||
              ((t._state = Vt),
              (t._cancel = t._pure._fork(
                (n) => {
                  t.reject(n);
                },
                (n) => {
                  t.resolve(n);
                }
              )));
          }),
          (Ht.prototype.reset = function() {
            this._state !== Ut &&
              (this._state > Vt && this._cancel(),
              (this._cancel = a),
              (this._queue = []),
              (this._queued = 0),
              (this._value = void 0),
              (this._state = Ut));
          }),
          (Ht.prototype._fork = function(t, n) {
            var e = a;
            switch (this._state) {
              case Vt:
                e = this._addToQueue(t, n);
                break;
              case Xt:
                t(this._value);
                break;
              case Yt:
                n(this._value);
                break;
              default:
                (e = this._addToQueue(t, n)), this.run();
            }
            return e;
          }),
          (Ht.prototype.toString = function() {
            return 'Future.cache(' + this._pure.toString() + ')';
          }),
          (Kt.prototype = Object.create(N)),
          (Kt.prototype._fork = function(t, n) {
            var e;
            try {
              e = this._fn(this._a);
            } catch (n) {
              return t(n), a;
            }
            return n(e), a;
          }),
          (Kt.prototype.toString = function() {
            return 'Future.encase(' + f(this._fn) + ', ' + s(this._a) + ')';
          }),
          (tn.prototype = Object.create(N)),
          (tn.prototype._fork = function(t, n) {
            var e;
            try {
              e = this._fn(this._a, this._b);
            } catch (n) {
              return t(n), a;
            }
            return n(e), a;
          }),
          (tn.prototype.toString = function() {
            return (
              'Future.encase2(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ')'
            );
          }),
          (nn.prototype = Object.create(N)),
          (nn.prototype._fork = function(t, n) {
            var e;
            try {
              e = this._fn(this._a, this._b, this._c);
            } catch (n) {
              return t(n), a;
            }
            return n(e), a;
          }),
          (nn.prototype.toString = function() {
            return (
              'Future.encase3(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ', ' +
              s(this._c) +
              ')'
            );
          }),
          (en.prototype = Object.create(N)),
          (en.prototype._fork = function(t, n) {
            var e = !0;
            return (
              this._fn(this._a, (r, u) => {
                e && ((e = !1), r ? t(r) : n(u));
              }),
              function() {
                e = !1;
              }
            );
          }),
          (en.prototype.toString = function() {
            return 'Future.encaseN(' + f(this._fn) + ', ' + s(this._a) + ')';
          }),
          (rn.prototype = Object.create(N)),
          (rn.prototype._fork = function(t, n) {
            var e = !0;
            return (
              this._fn(this._a, this._b, (r, u) => {
                e && ((e = !1), r ? t(r) : n(u));
              }),
              function() {
                e = !1;
              }
            );
          }),
          (rn.prototype.toString = function() {
            return (
              'Future.encaseN2(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ')'
            );
          }),
          (un.prototype = Object.create(N)),
          (un.prototype._fork = function(t, n) {
            var e = !0;
            return (
              this._fn(this._a, this._b, this._c, (r, u) => {
                e && ((e = !1), r ? t(r) : n(u));
              }),
              function() {
                e = !1;
              }
            );
          }),
          (un.prototype.toString = function() {
            return (
              'Future.encaseN3(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ', ' +
              s(this._c) +
              ')'
            );
          }),
          (on.prototype = Object.create(N)),
          (on.prototype._fork = function(t, n) {
            var e,
              r,
              u,
              i = this._fn,
              o = this._a,
              a = !0;
            return (
              ((e = i(o)),
              (r = i),
              (u = o),
              S(e)
                ? e
                : F(
                    "Future.encaseP expects the function it's given to return a Promise/Thenable\n  Actual: " +
                      s(e) +
                      '\n  From calling: ' +
                      f(r) +
                      '\n  With: ' +
                      s(u)
                  )).then(
                y((t) => {
                  a && ((a = !1), n(t));
                }),
                y((n) => {
                  a && ((a = !1), t(n));
                })
              ),
              function() {
                a = !1;
              }
            );
          }),
          (on.prototype.toString = function() {
            return 'Future.encaseP(' + f(this._fn) + ', ' + s(this._a) + ')';
          }),
          (an.prototype = Object.create(N)),
          (an.prototype._fork = function(t, n) {
            var e,
              r,
              u,
              i,
              o = this._fn,
              a = this._a,
              c = this._b,
              h = !0;
            return (
              ((e = o(a, c)),
              (r = o),
              (u = a),
              (i = c),
              S(e)
                ? e
                : F(
                    "Future.encaseP2 expects the function it's given to return a Promise/Thenable\n  Actual: " +
                      s(e) +
                      '\n  From calling: ' +
                      f(r) +
                      '\n  With 1: ' +
                      s(u) +
                      '\n  With 2: ' +
                      s(i)
                  )).then(
                y((t) => {
                  h && ((h = !1), n(t));
                }),
                y((n) => {
                  h && ((h = !1), t(n));
                })
              ),
              function() {
                h = !1;
              }
            );
          }),
          (an.prototype.toString = function() {
            return (
              'Future.encaseP2(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ')'
            );
          }),
          (cn.prototype = Object.create(N)),
          (cn.prototype._fork = function(t, n) {
            var e,
              r,
              u,
              i,
              o,
              a = this._fn,
              c = this._a,
              h = this._b,
              p = this._c,
              l = !0;
            return (
              ((e = a(c, h, p)),
              (r = a),
              (u = c),
              (i = h),
              (o = p),
              S(e)
                ? e
                : F(
                    "Future.encaseP3 expects the function it's given to return a Promise/Thenable\n  Actual: " +
                      s(e) +
                      '\n  From calling: ' +
                      f(r) +
                      '\n  With 1: ' +
                      s(u) +
                      '\n  With 2: ' +
                      s(i) +
                      '\n  With 3: ' +
                      s(o)
                  )).then(
                y((t) => {
                  l && ((l = !1), n(t));
                }),
                y((n) => {
                  l && ((l = !1), t(n));
                })
              ),
              function() {
                l = !1;
              }
            );
          }),
          (cn.prototype.toString = function() {
            return (
              'Future.encaseP3(' +
              f(this._fn) +
              ', ' +
              s(this._a) +
              ', ' +
              s(this._b) +
              ', ' +
              s(this._c) +
              ')'
            );
          }),
          (hn.prototype = Object.create(N)),
          (hn.prototype._fork = function(t, n) {
            var e,
              r,
              u = sn(this._generator()),
              i = ft,
              o = a;
            function c(t) {
              if (((r = t), i === pt)) return s();
              (i = ht), (e = fn(u.next(r)));
            }
            function s() {
              for (e = fn(u.next(r)); !e.done; )
                if (((i = ft), (o = e.value._fork(t, c)), i !== ht))
                  return void (i = pt);
              n(e.value);
            }
            return (
              s(),
              function() {
                o();
              }
            );
          }),
          (hn.prototype.toString = function() {
            return 'Future.do(' + f(this._generator) + ')';
          }),
          (ln.prototype = Object.create(N)),
          (ln.prototype._fork = function(t, n) {
            var e,
              r,
              u,
              i = this._acquire,
              o = this._dispose,
              c = this._consume,
              h = a,
              p = a,
              l = a;
            function y() {
              l(u);
            }
            function _() {
              var n,
                u,
                i,
                a = o(r);
              return (
                (u = o),
                (i = r),
                E((n = a)) ||
                  O(
                    'Future.hook',
                    "the first function it's given to return a Future",
                    n,
                    '\n  From calling: ' + f(u) + '\n  With: ' + s(i)
                  ),
                (e = a._fork(t, y))
              );
            }
            function d() {
              p(), _()();
            }
            function v(n) {
              (l = t), (u = n), _();
            }
            function m(t) {
              (l = n), (u = t), _();
            }
            return (
              (h = i._fork(t, (t) => {
                var n = c((r = t));
                (function(t, n, e) {
                  E(t) ||
                    O(
                      'Future.hook',
                      "the second function it's given to return a Future",
                      t,
                      '\n  From calling: ' + f(n) + '\n  With: ' + s(e)
                    );
                })(n, c, r),
                  (e = d),
                  (p = n._fork(v, m));
              })),
              (e = e || h),
              function() {
                e();
              }
            );
          }),
          (ln.prototype.toString = function() {
            return (
              'Future.hook(' +
              this._acquire.toString() +
              ', ' +
              f(this._dispose) +
              ', ' +
              f(this._consume) +
              ')'
            );
          }),
          (dn.prototype = Object.create(N)),
          (dn.prototype._fork = function(t, n) {
            var e = !0;
            return (
              this._fn((r, u) => {
                e && ((e = !1), r ? t(r) : n(u));
              }),
              function() {
                e = !1;
              }
            );
          }),
          (dn.prototype.toString = function() {
            return 'Future.node(' + f(this._fn) + ')';
          }),
          (mn.prototype = Object.create(N)),
          (mn.prototype._fork = function(t, n) {
            var e = this._futures,
              r = this._length,
              u = this._max,
              i = new Array(r),
              o = new Array(r),
              c = 0,
              s = 0,
              f = !1;
            function h() {
              for (var t = 0; t < r; t++) i[t] && i[t]();
            }
            function p(u) {
              s++,
                (i[u] = e[u]._fork(
                  (n) => {
                    (i[u] = a), h(), t(n);
                  },
                  (t) => {
                    (i[u] = a),
                      (o[u] = t),
                      s--,
                      c === r && 0 === s ? n(o) : f && l();
                  }
                ));
            }
            function l() {
              for (f = !1; c < r && s < u; ) p(c++);
              f = !0;
            }
            return l(), h;
          }),
          (mn.prototype.toString = function() {
            return (
              'Future.parallel(' + this._max + ', ' + s(this._futures) + ')'
            );
          });
        var gn = new L([]);
        function bn(t, n) {
          var e;
          (e = n),
            Array.isArray(e) || j('Future.parallel', 1, 'be an array', n);
          var r = (function(t, n) {
            for (var e = t.length, r = new Array(e), u = 0; u < e; u++)
              r[u] = n(t[u], u, t);
            return r;
          })(n, vn);
          return 0 === r.length ? gn : new mn(t, r);
        }
        function wn(t) {
          this._fn = t;
        }
        (wn.prototype = Object.create(N)),
          (wn.prototype._fork = function(t, n) {
            var e,
              r,
              u = !0;
            return (
              ((e = this._fn()),
              (r = this._fn),
              S(e)
                ? e
                : F(
                    "Future.tryP expects the function it's given to return a Promise/Thenable\n  Actual: " +
                      s(e) +
                      '\n  From calling: ' +
                      f(r)
                  )).then(
                y((t) => {
                  u && ((u = !1), n(t));
                }),
                y((n) => {
                  u && ((u = !1), t(n));
                })
              ),
              function() {
                u = !1;
              }
            );
          }),
          (wn.prototype.toString = function() {
            return 'Future.tryP(' + s(this._fn) + ')';
          }),
          'function' != typeof Object.create &&
            w('Please polyfill Object.create to use Fluture'),
          'function' != typeof Object.assign &&
            w('Please polyfill Object.assign to use Fluture'),
          'function' != typeof Array.isArray &&
            w('Please polyfill Array.isArray to use Fluture'),
          (M.of = M[_.of] = W),
          (M.chainRec = M[_.chainRec] = function(t, n) {
            return new lt(t, n);
          }),
          (M.reject = z),
          (M.ap = _t),
          (M.map = gt),
          (M.bimap = Ft),
          (M.chain = kt);
        var Fn = r(M, I, Et, (t, n) => {
          return new Bt(t, n);
        });
        function jn(t) {
          return t instanceof Fn || e(t) === Fn['@@type'];
        }
        (Fn.of = Fn[_.of]),
          (Fn.zero = Fn[_.zero]),
          (Fn.map = gt),
          (Fn.ap = _t),
          (Fn.alt = vt);
        var kn = Object.freeze({
          Future: M,
          default: M,
          Par: Fn,
          isParallel: jn,
          seq: function(t) {
            return jn(t) || j('Future.seq', 0, 'to be a Par', t), t.sequential;
          },
          isFuture: E,
          reject: z,
          of: W,
          never: I,
          isNever: D,
          after: function(t, n) {
            return (
              x(t) || j('Future.after', 0, 'be a positive integer', t),
              1 === arguments.length ? h(Gt, t) : Gt(t, n)
            );
          },
          rejectAfter: function(t, n) {
            return (
              x(t) || j('Future.rejectAfter', 0, 'be a positive integer', t),
              1 === arguments.length ? h(Zt, t) : Zt(t, n)
            );
          },
          attempt: Jt,
          try: Jt,
          cache: function(t) {
            return E(t) || O('Future.cache', 0, t), new Ht(t);
          },
          encase: function t(n, e) {
            return (
              A(n) || j('Future.encase', 0, 'be a function', n),
              1 === arguments.length ? h(t, n) : new Kt(n, e)
            );
          },
          encase2: function t(n, e, r) {
            switch ((A(n) || j('Future.encase2', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              default:
                return new tn(n, e, r);
            }
          },
          encase3: function t(n, e, r, u) {
            switch ((A(n) || j('Future.encase3', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              case 3:
                return l(t, n, e, r);
              default:
                return new nn(n, e, r, u);
            }
          },
          encaseN: function t(n, e) {
            return (
              A(n) || j('Future.encaseN', 0, 'be a function', n),
              1 === arguments.length ? h(t, n) : new en(n, e)
            );
          },
          encaseN2: function t(n, e, r) {
            switch ((A(n) || j('Future.encaseN2', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              default:
                return new rn(n, e, r);
            }
          },
          encaseN3: function t(n, e, r, u) {
            switch ((A(n) || j('Future.encaseN3', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              case 3:
                return l(t, n, e, r);
              default:
                return new un(n, e, r, u);
            }
          },
          encaseP: function t(n, e) {
            return (
              A(n) || j('Future.encaseP', 0, 'be a function', n),
              1 === arguments.length ? h(t, n) : new on(n, e)
            );
          },
          encaseP2: function t(n, e, r) {
            switch ((A(n) || j('Future.encaseP2', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              default:
                return new an(n, e, r);
            }
          },
          encaseP3: function t(n, e, r, u) {
            switch ((A(n) || j('Future.encaseP3', 0, 'be a function', n),
            arguments.length)) {
              case 1:
                return h(t, n);
              case 2:
                return p(t, n, e);
              case 3:
                return l(t, n, e, r);
              default:
                return new cn(n, e, r, u);
            }
          },
          go: pn,
          do: pn,
          hook: function(t, n, e) {
            return (
              E(t) || O('Future.hook', 0, t),
              1 === arguments.length
                ? h(_n, t)
                : 2 === arguments.length ? _n(t, n) : _n(t, n, e)
            );
          },
          node: function(t) {
            return A(t) || j('Future.node', 0, 'be a function', t), new dn(t);
          },
          parallel: function(t, n) {
            return (
              x(t) || j('Future.parallel', 0, 'be a positive integer', t),
              1 === arguments.length ? h(bn, t) : bn(t, n)
            );
          },
          tryP: function(t) {
            return A(t) || j('Future.tryP', 0, 'be a function', t), new wn(t);
          },
          ap: _t,
          alt: vt,
          map: gt,
          bimap: Ft,
          chain: kt,
          mapRej: function(t, n) {
            return (
              A(t) || j('Future.mapRej', 0, 'be a Function', t),
              1 === arguments.length ? h(Ot, t) : Ot(t, n)
            );
          },
          chainRej: function(t, n) {
            return (
              A(t) || j('Future.chainRej', 0, 'be a Function', t),
              1 === arguments.length ? h(At, t) : At(t, n)
            );
          },
          lastly: xt,
          finally: xt,
          and: function(t, n) {
            return (
              E(t) || O('Future.and', 0, t),
              1 === arguments.length ? h(Rt, t) : Rt(t, n)
            );
          },
          both: function(t, n) {
            return (
              E(t) || O('Future.both', 0, t),
              1 === arguments.length ? h(Pt, t) : Pt(t, n)
            );
          },
          or: function(t, n) {
            return (
              E(t) || O('Future.or', 0, t),
              1 === arguments.length ? h(qt, t) : qt(t, n)
            );
          },
          race: Et,
          swap: function(t) {
            return E(t) || O('Future.swap', 0, t), t.swap();
          },
          fold: function(t, n, e) {
            return (
              A(t) || j('Future.fold', 0, 'be a function', t),
              1 === arguments.length
                ? h(Tt, t)
                : 2 === arguments.length ? Tt(t, n) : Tt(t, n, e)
            );
          },
          done: function(t, n) {
            return (
              A(t) || j('Future.done', 0, 'be a Function', t),
              1 === arguments.length ? h(Ct, t) : Ct(t, n)
            );
          },
          fork: function(t, n, e) {
            return (
              A(t) || j('Future.fork', 0, 'be a function', t),
              1 === arguments.length
                ? h(Lt, t)
                : 2 === arguments.length ? Lt(t, n) : Lt(t, n, e)
            );
          },
          promise: function(t) {
            return E(t) || O('Future.promise', 0, t), t.promise();
          },
          value: function(t, n) {
            return (
              A(t) || j('Future.value', 0, 'be a Function', t),
              1 === arguments.length ? h(Wt, t) : Wt(t, n)
            );
          },
          extractLeft: function(t) {
            return E(t) || O('Future.extractLeft', 0, t), t.extractLeft();
          },
          extractRight: function(t) {
            return E(t) || O('Future.extractRight', 0, t), t.extractRight();
          },
        });
        return Object.assign(M, kn);
      })(K, tt, H, nt, rt);
    }),
    it = ut.isFuture,
    ot = ut.of,
    at = ut.reject,
    ct = ut.Future,
    st = function(t) {
      return Array.isArray(t);
    },
    ft = function(t) {
      return t && 1 === t.nodeType;
    },
    ht = function(t) {
      return st(t)
        ? V(U(ft), ot, () => {
            return at({
              error:
                'The one or more values in the array you passed in is not a valid DOM Element.',
            });
          })(t)
        : V(ft, ot, () => {
            return at({
              error: 'The value you passed in is not a valid DOM Element.',
            });
          })(t);
    };
  var pt = a((t, n, e) => {
      var r, u;
      return (
        (u = n),
        Array.isArray(u)
          ? (r = e.classList)[t].apply(
              r,
              (function(t) {
                if (Array.isArray(t)) {
                  for (var n = 0, e = Array(t.length); n < t.length; n++)
                    e[n] = t[n];
                  return e;
                }
                return Array.from(t);
              })(n)
            )
          : e.classList[t](n),
        e
      );
    }),
    lt = pt('add'),
    yt = function(t) {
      return t && 1 === t.nodeType;
    },
    _t = a(function t() {
      var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
        e = arguments[1],
        r = arguments[2],
        u = n || window.document;
      return r === u.body
        ? r
        : e(r.parentElement) ? r.parentElement : t(u, e, r.parentElement);
    }),
    dt = a((t, n) => {
      return n.hasAttribute(t) ? n.getAttribute(t) : null;
    }),
    vt = a((t, n) => {
      return n.classList.item(t);
    }),
    mt = a((t, n) => {
      return n.dataset.hasOwnProperty(t) ? n.dataset[t] : null;
    }),
    gt = a((t, n) => {
      return n[t] || null;
    });
  a((t, n) => {
    return window.getComputedStyles(n, null)[t] || null;
  });
  var bt = a((t, n) => {
      return n.hasAttribute(t);
    }),
    wt = a((t, n) => {
      return n.classList.contains(t);
    }),
    Ft = a((t, n) => {
      return n.dataset.hasOwnProperty(t);
    }),
    jt = a((t, n) => {
      return t in n;
    });
  a((t, n) => {
    return window.getComputedStyle(n, null).hasOwnProperty(t);
  });
  a((t, n, e) => {
    return e.hasAttribute(t) ? e.getAttribute(t) === n : null;
  });
  a((t, n, e) => {
    return e.dataset.hasOwnProperty(t) ? e.dataset[t] === n : null;
  });
  a((t, n, e) => {
    return e[t] ? e[t] === n : null;
  });
  a((t, n, e) => {
    var r = window.getComputedStyle(e, null);
    return r.hasOwnProperty(t) ? r[t] === n : null;
  });
  var kt = a((t, n) => {
      return n.removeAttribute(t), n;
    }),
    Ot = pt('remove');
  a((t, n, e) => {
    return e.classList.replace(t, n), e;
  });
  var At = (function() {
    return function(t, n) {
      if (Array.isArray(t)) return t;
      if (Symbol.iterator in Object(t))
        return (function(t, n) {
          var e = [],
            r = !0,
            u = !1,
            i = void 0;
          try {
            for (
              var o, a = t[Symbol.iterator]();
              !(r = (o = a.next()).done) &&
              (e.push(o.value), !n || e.length !== n);
              r = !0
            );
          } catch (t) {
            (u = !0), (i = t);
          } finally {
            try {
              !r && a.return && a.return();
            } finally {
              if (u) throw i;
            }
          }
          return e;
        })(t, n);
      throw new TypeError(
        'Invalid attempt to destructure non-iterable instance'
      );
    };
  })();
  var St = a((t, n) => {
      return n[t];
    }),
    xt = function(t) {
      return t.reduce((t, n) => {
        var e = At(n, 2),
          r = e[0],
          u = e[1];
        return Object.assign(
          t,
          (function(t, n, e) {
            return (
              n in t
                ? Object.defineProperty(t, n, {
                    value: e,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (t[n] = e),
              t
            );
          })({}, r, u)
        );
      }, {});
    },
    Rt = function(t, n) {
      return (function(t) {
        return (
          'submit' !== t.type && (((n = t).name && n.name.length > 0) || !1)
        );
        var n;
      })(n)
        ? [].concat(
            (function(t) {
              if (Array.isArray(t)) {
                for (var n = 0, e = Array(t.length); n < t.length; n++)
                  e[n] = t[n];
                return e;
              }
              return Array.from(t);
            })(t),
            [[n.name, n.value]]
          )
        : t;
    },
    Pt = function(t) {
      return (n = St('elements', t)), Array.from(n);
      var n;
    },
    qt = function(t) {
      return (n = t) && 1 === n.nodeType && 'FORM' === n.nodeName
        ? xt(Pt(t).reduce(Rt, []))
        : null;
      var n;
    },
    Mt = a((t, n, e) => {
      return e.setAttribute(t, n), e;
    }),
    Et = /^[a-zA-Z0-9]?[a-zA-Z0-9_:.]*[a-zA-Z0-9]$/,
    Nt = a((t, n, e) => {
      return (function(t) {
        var n = t.match(Et);
        return n && 1 === n.length;
      })(t)
        ? ((e.dataset[t] = n), e)
        : null;
    }),
    Tt = a((t, n, e) => {
      return (e[t] = n), e;
    });
  a((t, n, e) => {
    return (e.style[t] = n), e;
  });
  var Ct = pt('toggle'),
    zt = function(t) {
      var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return ct((e, r) => {
        var u = (function(t) {
          var n =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          return yt(n) ? n.querySelector(t) : document.querySelector(t);
        })(t, n);
        return u
          ? r(u)
          : e({
              error:
                'An element with the following selector was not found: ' + t,
            });
      });
    },
    Lt = function(t) {
      return it(t)
        ? t
        : ft(t) || (st(t) && U(ft, t))
          ? ot(t)
          : 'string' == typeof t
            ? zt(t)
            : at({
                error:
                  'Argument ' +
                  t +
                  ' is not a valid type. Functions only accept Futures, DOM Elements, or valid selector string',
              });
    };
  var Wt = function(t, n) {
      var e;
      (t = t || []), (n = n || []);
      var r = t.length,
        u = n.length,
        i = [];
      for (e = 0; e < r; ) (i[i.length] = t[e]), (e += 1);
      for (e = 0; e < u; ) (i[i.length] = n[e]), (e += 1);
      return i;
    },
    Bt = u((t, n) => {
      return 'function' == typeof n['fantasy-land/ap']
        ? n['fantasy-land/ap'](t)
        : 'function' == typeof t.ap
          ? t.ap(n)
          : 'function' == typeof t
            ? function(e) {
                return t(e)(n(e));
              }
            : w(
                (t, e) => {
                  return Wt(t, C(e, n));
                },
                [],
                t
              );
    }),
    It = u((t, n) => {
      return Wt([t], n);
    }),
    Dt = W((t, n, e) => {
      for (var r = e.length - 1; r >= 0; ) (n = t(e[r], n)), (r -= 1);
      return n;
    }),
    Qt = u((t, n) => {
      return 'function' == typeof n.sequence
        ? n.sequence(t)
        : Dt(
            (t, n) => {
              return Bt(C(It, t), n);
            },
            t([]),
            n
          );
    }),
    Gt = W((t, n, e) => {
      return 'function' == typeof e['fantasy-land/traverse']
        ? e['fantasy-land/traverse'](n, t)
        : Qt(t, C(n, e));
    }),
    Zt = a((t, n) => {
      return Z(
        z(
          (function(t) {
            return V(st, Gt(ot, t), t);
          })(t)
        ),
        z(ht),
        Lt
      )(n);
    }),
    $t = a((t, n) => {
      return ot(lt(t, n));
    }),
    Jt = a((t, n) => {
      return Zt($t(t))(n);
    }),
    Ut = a((t, n, e) => {
      return ot(pt(t, n, e));
    }),
    Vt = a((t, n, e) => {
      return Zt(Ut(t, n))(e);
    }),
    Xt = a((t, n, e) => {
      var r = t || window.document;
      return e === r.body
        ? ot(e)
        : n(e.parentElement).chain((r) => {
            return r ? ot(e.parentElement) : Xt(t, n, e.parentElement);
          });
    }),
    Yt = a((t, n, e) => {
      return it(n(e)) ? Xt(t, n, e) : ot(_t(t, n, e));
    }),
    Ht = a((t, n, e) => {
      return Zt(Yt(t, n))(e);
    }),
    Kt = a((t, n, e) => {
      return e.fork(t, n);
    }),
    tn = a((t, n) => {
      var e = dt(t, n);
      return e
        ? ot(e)
        : at({ error: 'No attribute was found with the following name: ' + t });
    }),
    nn = a((t, n) => {
      return Zt(tn(t))(n);
    }),
    en = a((t, n) => {
      var e = vt(t, n);
      return e
        ? ot(e)
        : at({ error: 'No class was found with the following index: ' + t });
    }),
    rn = a((t, n) => {
      return Zt(en(t))(n);
    }),
    un = function(t) {
      var n = (function(t) {
        return t.classList.length > 0 ? t.classList : null;
      })(t);
      return n
        ? ot(n)
        : at({ error: 'No classes were found on this element.' });
    },
    on = a((t, n) => {
      var e = mt(t, n);
      return e
        ? ot(e)
        : at({ error: 'No attribute was found with the following name: ' + t });
    }),
    an = a((t, n) => {
      return Zt(on(t))(n);
    }),
    cn = a((t, n) => {
      var e = gt(t, n);
      return e
        ? ot(e)
        : at({ error: 'No property was found with the following name: ' + t });
    }),
    sn = a((t, n) => {
      return Zt(cn(t))(n);
    }),
    fn = a((t, n) => {
      return ot(bt(t, n));
    }),
    hn = a((t, n) => {
      return Zt(fn(t))(n);
    }),
    pn = a((t, n) => {
      return ot(wt(t, n));
    }),
    ln = a((t, n) => {
      return Zt(pn(t))(n);
    }),
    yn = a((t, n) => {
      return ot(Ft(t, n));
    }),
    _n = a((t, n) => {
      return Zt(yn(t))(n);
    }),
    dn = a((t, n) => {
      return ot(jt(t, n));
    }),
    vn = a((t, n) => {
      return Zt(dn(t))(n);
    }),
    mn = a((t, n) => {
      return ot(kt(t, n));
    }),
    gn = a((t, n) => {
      return Zt(mn(t))(n);
    }),
    bn = a((t, n) => {
      return ot(Ot(t, n));
    }),
    wn = a((t, n) => {
      return Zt(bn(t))(n);
    }),
    Fn = function(t) {
      var n = qt(t);
      return n
        ? ot(n)
        : at({ error: 'Element supplied is not a valid DOM Form Element.' });
    },
    jn = a((t, n, e) => {
      return ot(Mt(t, n, e));
    }),
    kn = a((t, n, e) => {
      return Zt(jn(t, n))(e);
    }),
    On = a((t, n, e) => {
      var r = Nt(t, n, e);
      return r
        ? ot(r)
        : at({
            error:
              'The following data attribute you passed in is not valid: ' + t,
          });
    }),
    An = a((t, n, e) => {
      return Zt(On(t, n))(e);
    }),
    Sn = a((t, n, e) => {
      return ot(Tt(t, n, e));
    }),
    xn = a((t, n, e) => {
      return Zt(Sn(t, n))(e);
    }),
    Rn = a((t, n) => {
      return ot(Ct(t, n));
    }),
    Pn = a((t, n) => {
      return Zt(Rn(t))(n);
    }),
    qn = Ht();
  (t.addClass = Jt),
    (t.classList = Vt),
    (t.dom = zt),
    (t.domAll = function(t) {
      var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return ct((e, r) => {
        var u = (function(t) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            e = yt(n) ? n.querySelectorAll(t) : document.querySelectorAll(t);
          return e.length > 0 ? Array.from(e) : null;
        })(t, n);
        return u
          ? r(u)
          : e({
              error:
                'An element with the following selector was not found: ' + t,
            });
      });
    }),
    (t.findParent = qn),
    (t.fork = Kt),
    (t.getAttr = nn),
    (t.getClass = rn),
    (t.getClasses = function(t) {
      return Zt(un)(t);
    }),
    (t.getData = an),
    (t.getProp = sn),
    (t.hasAttr = hn),
    (t.hasClass = ln),
    (t.hasData = _n),
    (t.hasProp = vn),
    (t.identity = function(t) {
      return t;
    }),
    (t.removeAttr = gn),
    (t.removeClass = wn),
    (t.serialize = function(t) {
      return Zt(Fn)(t);
    }),
    (t.setAttr = kn),
    (t.setData = An),
    (t.setProp = xn),
    (t.toggleClass = Pn),
    Object.defineProperty(t, '__esModule', { value: !0 });
});
